{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-jobs-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport JobZImage from \"../../../../common/jobz-img\";\nimport { NavLink } from \"react-router-dom\";\nimport { publicUser } from \"../../../../../globals/route-names\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionJobsGrid() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/post-job\").then(response => response.json()).then(data => setJobs(data)).catch(error => console.error(\"Error fetching jobs:\", error));\n  }, []);\n  function getDateDifference(startDate) {\n    const now = new Date();\n    const dateParts = startDate.split('/');\n    if (dateParts.length === 3) {\n      startDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\n    }\n    const start = new Date(startDate);\n    if (isNaN(start)) {\n      console.error('Invalid start date:', startDate);\n      return {\n        diffDays: 0,\n        diffMonths: 0\n      };\n    }\n    const diffTime = now - start;\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\n    return {\n      diffDays,\n      diffMonths\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: jobs.map((job, index) => {\n      const {\n        diffDays\n      } = getDateDifference(job.postDate); // assuming `postDate` is available\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6 col-md-12 m-b30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twm-jobs-grid-style1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-media\",\n            children: /*#__PURE__*/_jsxDEV(JobZImage, {\n              src: job.imageUrl || \"default-image.jpg\",\n              alt: \"Job Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"twm-job-post-duration\",\n            children: [diffDays, \" days ago\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-jobs-category\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `twm-bg-${job.category.toLowerCase()}`,\n              children: job.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-mid-content\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: `${publicUser.jobs.DETAIL1}/${job.id}`,\n              className: \"twm-job-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"twm-job-address\",\n              children: job.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: job.website,\n              className: \"twm-job-websites site-text-primary\",\n              children: job.website\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-right-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-jobs-amount\",\n              children: [\"$\", job.salary, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"/ \", job.salaryType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: `${publicUser.jobs.DETAIL1}/${job.id}`,\n              className: \"twm-jobs-browse site-text-primary\",\n              children: \"Browse Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(SectionJobsGrid, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = SectionJobsGrid;\nexport default SectionJobsGrid;\nvar _c;\n$RefreshReg$(_c, \"SectionJobsGrid\");","map":{"version":3,"names":["React","useEffect","useState","JobZImage","NavLink","publicUser","jsxDEV","_jsxDEV","SectionJobsGrid","_s","jobs","setJobs","fetch","then","response","json","data","catch","error","console","getDateDifference","startDate","now","Date","dateParts","split","length","start","isNaN","diffDays","diffMonths","diffTime","Math","floor","className","children","map","job","index","postDate","src","imageUrl","alt","fileName","_jsxFileName","lineNumber","columnNumber","category","toLowerCase","to","DETAIL1","id","title","location","href","website","salary","salaryType","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-jobs-grid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport JobZImage from \"../../../../common/jobz-img\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { publicUser } from \"../../../../../globals/route-names\";\r\n\r\nfunction SectionJobsGrid() {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/post-job\")\r\n      .then((response) => response.json())\r\n      .then((data) => setJobs(data))\r\n      .catch((error) => console.error(\"Error fetching jobs:\", error));\r\n  }, []);\r\n\r\n  function getDateDifference(startDate) {\r\n    const now = new Date();\r\n  \r\n    const dateParts = startDate.split('/');\r\n    if (dateParts.length === 3) {\r\n      startDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\r\n    }\r\n  \r\n    const start = new Date(startDate);\r\n  \r\n    if (isNaN(start)) {\r\n      console.error('Invalid start date:', startDate);\r\n      return { diffDays: 0, diffMonths: 0 };\r\n    }\r\n  \r\n    const diffTime = now - start;\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30)); \r\n  \r\n    return { diffDays, diffMonths };\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {jobs.map((job, index) => {\r\n        const { diffDays } = getDateDifference(job.postDate); // assuming `postDate` is available\r\n        return (\r\n          <div key={index} className=\"col-lg-6 col-md-12 m-b30\">\r\n            <div className=\"twm-jobs-grid-style1\">\r\n              <div className=\"twm-media\">\r\n                <JobZImage src={job.imageUrl || \"default-image.jpg\"} alt=\"Job Image\" />\r\n              </div>\r\n              <span className=\"twm-job-post-duration\">{diffDays} days ago</span>\r\n              <div className=\"twm-jobs-category\">\r\n                <span className={`twm-bg-${job.category.toLowerCase()}`}>\r\n                  {job.category}\r\n                </span>\r\n              </div>\r\n              <div className=\"twm-mid-content\">\r\n                <NavLink to={`${publicUser.jobs.DETAIL1}/${job.id}`} className=\"twm-job-title\">\r\n                  <h4>{job.title}</h4>\r\n                </NavLink>\r\n                <p className=\"twm-job-address\">{job.location}</p>\r\n                <a href={job.website} className=\"twm-job-websites site-text-primary\">{job.website}</a>\r\n              </div>\r\n              <div className=\"twm-right-content\">\r\n                <div className=\"twm-jobs-amount\">${job.salary} <span>/ {job.salaryType}</span></div>\r\n                <NavLink to={`${publicUser.jobs.DETAIL1}/${job.id}`} className=\"twm-jobs-browse site-text-primary\">Browse Job</NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SectionJobsGrid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}