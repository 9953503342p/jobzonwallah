{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\candidate\\\\sections\\\\profile\\\\section-can-basic-info.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionCandicateBasicInfo() {\n  _s();\n  const [formData, setFormData] = useState({\n    Name: '',\n    Email: '',\n    Phone: '',\n    Website: '',\n    Qualification: '',\n    Language: '',\n    Jobcategory: '',\n    Experience: '',\n    Currentsalery: '',\n    Expectedsalery: '',\n    Age: '',\n    Country: '',\n    City: '',\n    Postcode: '',\n    Fulladdress: '',\n    Description: ''\n  });\n  useEffect(() => {\n    const userId = Cookies.get('candidateId');\n    if (userId) {\n      // Fetch user information from the backend\n      fetch('http://localhost:8080/get-candidate-info', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include' // Ensure cookies are sent\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch user data');\n        }\n        return response.json();\n      }).then(data => {\n        setFormData({\n          Name: data.Name,\n          Email: data.Email,\n          Phone: data.Phone || '',\n          // Optional field, ensure it's handled\n          Website: data.Website,\n          Qualification: data.Qualification,\n          Language: data.Language,\n          Jobcategory: data.Jobcategory,\n          Experience: data.Experience,\n          Currentsalery: data.Currentsalery,\n          Expectedsalery: data.Expectedsalery,\n          Age: data.Age,\n          Country: data.Country,\n          City: data.City,\n          Postcode: data.Postcode,\n          Fulladdress: data.Fulladdress,\n          Description: data.Description\n        });\n      }).catch(error => console.error('Error fetching user data:', error));\n    }\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      userId,\n      ...updatedData\n    } = formData;\n    try {\n      const response = await fetch('http://localhost:8080/update-candidate-info', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedData),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert('Information updated successfully');\n      } else {\n        const error = await response.json();\n        alert('Error: ' + error.message);\n      }\n    } catch (err) {\n      console.error(err);\n      alert('Error: ' + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-body wt-panel-body p-a20 m-b30\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-6 col-lg-6 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              name: \"Name\",\n              value: formData.Name,\n              onChange: handleChange,\n              type: \"text\",\n              placeholder: \"Devid Smith\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12 col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-left\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"site-button\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_s(SectionCandicateBasicInfo, \"2sPFCfuW/hJlnmSTgpgHwZTY9RA=\");\n_c = SectionCandicateBasicInfo;\nexport default SectionCandicateBasicInfo;\nvar _c;\n$RefreshReg$(_c, \"SectionCandicateBasicInfo\");","map":{"version":3,"names":["React","useState","useEffect","Cookies","jsxDEV","_jsxDEV","SectionCandicateBasicInfo","_s","formData","setFormData","Name","Email","Phone","Website","Qualification","Language","Jobcategory","Experience","Currentsalery","Expectedsalery","Age","Country","City","Postcode","Fulladdress","Description","userId","get","fetch","method","headers","credentials","then","response","ok","Error","json","data","catch","error","console","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","updatedData","body","JSON","stringify","alert","message","err","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/candidate/sections/profile/section-can-basic-info.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Cookies from 'js-cookie';\n\nfunction SectionCandicateBasicInfo() {\n    const [formData, setFormData] = useState({\n        Name: '',\n        Email: '',\n        Phone: '',\n        Website: '',\n        Qualification: '',\n        Language: '',\n        Jobcategory: '',\n        Experience: '',\n        Currentsalery: '',\n        Expectedsalery: '',\n        Age: '',\n        Country: '',\n        City: '',\n        Postcode: '',\n        Fulladdress: '',\n        Description: '',\n    });\n\n    useEffect(() => {\n        const userId = Cookies.get('candidateId');\n        if (userId) {\n            // Fetch user information from the backend\n            fetch('http://localhost:8080/get-candidate-info', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',  // Ensure cookies are sent\n            })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch user data');\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setFormData({\n                    Name: data.Name,\n                    Email: data.Email,\n                    Phone: data.Phone || '',  // Optional field, ensure it's handled\n                    Website: data.Website,\n                    Qualification: data.Qualification,\n                    Language: data.Language,\n                    Jobcategory: data.Jobcategory,\n                    Experience: data.Experience,\n                    Currentsalery: data.Currentsalery,\n                    Expectedsalery: data.Expectedsalery,\n                    Age: data.Age,\n                    Country: data.Country,\n                    City: data.City,\n                    Postcode: data.Postcode,\n                    Fulladdress: data.Fulladdress,\n                    Description: data.Description,\n                });\n            })\n            .catch((error) => console.error('Error fetching user data:', error));\n        }\n    }, []);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prevData => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const { userId, ...updatedData } = formData;\n\n        try {\n            const response = await fetch('http://localhost:8080/update-candidate-info', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(updatedData),\n                credentials: 'include',\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                alert('Information updated successfully');\n            } else {\n                const error = await response.json();\n                alert('Error: ' + error.message);\n            }\n        } catch (err) {\n            console.error(err);\n            alert('Error: ' + err.message);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {/* Form structure as you've already defined */}\n            <div className=\"panel-body wt-panel-body p-a20 m-b30\">\n                {/* Each field like Name, Phone, etc. with value populated from formData */}\n                <div className=\"row\">\n                    {/* Name Field Example */}\n                    <div className=\"col-xl-6 col-lg-6 col-md-12\">\n                        <div className=\"form-group\">\n                            <label>Your Name</label>\n                            <input\n                                className=\"form-control\"\n                                name=\"Name\"\n                                value={formData.Name}\n                                onChange={handleChange}\n                                type=\"text\"\n                                placeholder=\"Devid Smith\"\n                            />\n                        </div>\n                    </div>\n                    {/* Repeat for other fields like Email, Phone, etc. */}\n                </div>\n                {/* Save Changes button */}\n                <div className=\"col-lg-12 col-md-12\">\n                    <div className=\"text-left\">\n                        <button type=\"submit\" className=\"site-button\">Save Changes</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default SectionCandicateBasicInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}