{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-jobs-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport JobZImage from \"../../../../common/jobz-img\";\nimport { NavLink } from \"react-router-dom\";\nimport SectionPagination from \"../common/section-pagination\";\nimport { publicUser } from \"../../../../../globals/route-names\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionJobsGrid() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const perPage = 5;\n  useEffect(() => {\n    fetch(\"http://localhost:8080/post-job\").then(response => response.json()).then(data => setJobs(data)).catch(error => console.error(\"Error fetching jobs:\", error));\n  }, []);\n\n  // Handle pagination\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // Get the jobs to display based on the current page and items per page\n  const indexOfLastJob = currentPage * perPage;\n  const indexOfFirstJob = indexOfLastJob - perPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n  function getDateDifference(startDate) {\n    const now = new Date();\n    const dateParts = startDate.split('/');\n    if (dateParts.length === 3) {\n      startDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\n    }\n    const start = new Date(startDate);\n    if (isNaN(start)) {\n      return {\n        diffDays: 0,\n        diffMonths: 0\n      };\n    }\n    const diffTime = now - start;\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\n    return {\n      diffDays,\n      diffMonths\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentJobs.map((job, index) => {\n        const {\n          diffDays,\n          diffMonths\n        } = getDateDifference(job.postDate);\n        const jobDuration = diffDays < 30 ? `${diffDays} days ago` : `${diffMonths} months ago`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 col-md-12 m-b30\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-jobs-grid-style1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-media\",\n              children: /*#__PURE__*/_jsxDEV(JobZImage, {\n                src: job.companyLogo,\n                alt: \"Company Logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"twm-job-post-duration\",\n              children: jobDuration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-jobs-category green\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `twm-bg-${job.jobType.toLowerCase()}`,\n                children: job.jobType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-mid-content\",\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: `${publicUser.jobs.DETAIL1}/${job.id}`,\n                className: \"twm-job-title\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"twm-job-address\",\n                children: job.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: job.companyWebsite,\n                className: \"twm-job-websites site-text-primary\",\n                children: job.companyWebsite\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-right-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"twm-jobs-amount\",\n                children: [job.salary, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"/ \", job.salaryUnit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 65\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                to: `${publicUser.jobs.DETAIL1}/${job.id}`,\n                className: \"twm-jobs-browse site-text-primary\",\n                children: \"Browse Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionPagination, {\n      totalItems: jobs.length,\n      perPage: perPage,\n      currentPage: currentPage,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionJobsGrid, \"tVvkcMdonUGj2Jv5gKa++VlWdvI=\");\n_c = SectionJobsGrid;\nexport default SectionJobsGrid;\nvar _c;\n$RefreshReg$(_c, \"SectionJobsGrid\");","map":{"version":3,"names":["React","useEffect","useState","JobZImage","NavLink","SectionPagination","publicUser","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionJobsGrid","_s","jobs","setJobs","currentPage","setCurrentPage","perPage","fetch","then","response","json","data","catch","error","console","paginate","pageNumber","indexOfLastJob","indexOfFirstJob","currentJobs","slice","getDateDifference","startDate","now","Date","dateParts","split","length","start","isNaN","diffDays","diffMonths","diffTime","Math","floor","children","className","map","job","index","postDate","jobDuration","src","companyLogo","alt","fileName","_jsxFileName","lineNumber","columnNumber","jobType","toLowerCase","to","DETAIL1","id","title","address","href","companyWebsite","salary","salaryUnit","totalItems","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-jobs-grid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport JobZImage from \"../../../../common/jobz-img\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SectionPagination from \"../common/section-pagination\";\r\nimport { publicUser } from \"../../../../../globals/route-names\";\r\n\r\nfunction SectionJobsGrid() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const perPage = 5;\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/post-job\")\r\n      .then((response) => response.json())\r\n      .then((data) => setJobs(data))\r\n      .catch((error) => console.error(\"Error fetching jobs:\", error));\r\n  }, []);\r\n\r\n  // Handle pagination\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // Get the jobs to display based on the current page and items per page\r\n  const indexOfLastJob = currentPage * perPage;\r\n  const indexOfFirstJob = indexOfLastJob - perPage;\r\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\r\n\r\n  function getDateDifference(startDate) {\r\n    const now = new Date();\r\n    const dateParts = startDate.split('/');\r\n    if (dateParts.length === 3) {\r\n      startDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\r\n    }\r\n    const start = new Date(startDate);\r\n    if (isNaN(start)) {\r\n      return { diffDays: 0, diffMonths: 0 };\r\n    }\r\n    const diffTime = now - start;\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\r\n    return { diffDays, diffMonths };\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        {currentJobs.map((job, index) => {\r\n          const { diffDays, diffMonths } = getDateDifference(job.postDate);\r\n          const jobDuration = diffDays < 30 ? `${diffDays} days ago` : `${diffMonths} months ago`;\r\n\r\n          return (\r\n            <div key={index} className=\"col-lg-6 col-md-12 m-b30\">\r\n              <div className=\"twm-jobs-grid-style1\">\r\n                <div className=\"twm-media\">\r\n                  <JobZImage src={job.companyLogo} alt=\"Company Logo\" />\r\n                </div>\r\n                <span className=\"twm-job-post-duration\">{jobDuration}</span>\r\n                <div className=\"twm-jobs-category green\">\r\n                  <span className={`twm-bg-${job.jobType.toLowerCase()}`}>{job.jobType}</span>\r\n                </div>\r\n                <div className=\"twm-mid-content\">\r\n                  <NavLink to={`${publicUser.jobs.DETAIL1}/${job.id}`} className=\"twm-job-title\">\r\n                    <h4>{job.title}</h4>\r\n                  </NavLink>\r\n                  <p className=\"twm-job-address\">{job.address}</p>\r\n                  <a href={job.companyWebsite} className=\"twm-job-websites site-text-primary\">{job.companyWebsite}</a>\r\n                </div>\r\n                <div className=\"twm-right-content\">\r\n                  <div className=\"twm-jobs-amount\">{job.salary} <span>/ {job.salaryUnit}</span></div>\r\n                  <NavLink to={`${publicUser.jobs.DETAIL1}/${job.id}`} className=\"twm-jobs-browse site-text-primary\">Browse Job</NavLink>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      \r\n      {/* Pagination Component */}\r\n      <SectionPagination\r\n        totalItems={jobs.length}\r\n        perPage={perPage}\r\n        currentPage={currentPage}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SectionJobsGrid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}