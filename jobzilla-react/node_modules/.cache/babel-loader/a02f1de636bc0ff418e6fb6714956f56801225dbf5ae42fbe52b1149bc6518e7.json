{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\employers\\\\detail\\\\section-available-jobs-list.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport JobZImage from \"../../../../../common/jobz-img\";\nimport { publicUser } from \"../../../../../../globals/route-names\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionAvailableJobsList() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const userId = use; // Replace with dynamic userId if needed\n        const response = await axios.get(`http://localhost:8080/jobs/last4/${userId}`);\n        setJobs(response.data);\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchJobs();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading available jobs...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (jobs.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No jobs available for this employer.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"twm-s-title\",\n      children: \"Available Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twm-jobs-list-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-jobs-list-style1 mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-media\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: job.userId.companylogo ? `http://localhost:8080/${job.userId.companylogo}` : \"images/jobs-company/default.jpg\",\n                alt: job.title || \"Job Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-mid-content\",\n              children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                to: `${publicUser.jobs.DETAIL1}/${job._id}`,\n                className: \"twm-job-title\",\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: job.jobcategory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"twm-job-address\",\n                children: job.location || \"Location not specified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: job.website || \"#\",\n                className: \"twm-job-websites site-text-primary\",\n                children: job.website || \"Website not available\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-right-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"twm-jobs-category green\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"twm-bg-green\",\n                  children: job.jobtype || \"Job Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"twm-jobs-amount\",\n                children: [job.offeredsalary || \"Salary not specified\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"/ Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 67\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                to: `${publicUser.jobs.DETAIL1}/${job._id}`,\n                className: \"twm-jobs-browse site-text-primary\",\n                children: \"Browse Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, job._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionAvailableJobsList, \"xAXs/kqjedBdxYZ+TLlF70OyTQI=\");\n_c = SectionAvailableJobsList;\nexport default SectionAvailableJobsList;\nvar _c;\n$RefreshReg$(_c, \"SectionAvailableJobsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","NavLink","JobZImage","publicUser","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionAvailableJobsList","_s","jobs","setJobs","loading","setLoading","fetchJobs","userId","use","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","job","src","companylogo","alt","title","to","DETAIL1","_id","jobcategory","location","href","website","jobtype","offeredsalary","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/employers/detail/section-available-jobs-list.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport JobZImage from \"../../../../../common/jobz-img\";\nimport { publicUser } from \"../../../../../../globals/route-names\";\n\nfunction SectionAvailableJobsList() {\n  const [jobs, setJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const userId = use; // Replace with dynamic userId if needed\n        const response = await axios.get(`http://localhost:8080/jobs/last4/${userId}`);\n        setJobs(response.data);\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchJobs();\n  }, []);\n\n  if (loading) {\n    return <p>Loading available jobs...</p>;\n  }\n\n  if (jobs.length === 0) {\n    return <p>No jobs available for this employer.</p>;\n  }\n\n  return (\n    <>\n      <h4 className=\"twm-s-title\">Available Jobs</h4>\n      <div className=\"twm-jobs-list-wrap\">\n        <ul>\n          {jobs.map((job) => (\n            <li key={job._id}>\n              <div className=\"twm-jobs-list-style1 mb-5\">\n                <div className=\"twm-media\">\n                <img \n  src={job.userId.companylogo ? `http://localhost:8080/${job.userId.companylogo}` : \"images/jobs-company/default.jpg\"} \n  alt={job.title || \"Job Image\"} \n/>\n     </div>\n                <div className=\"twm-mid-content\">\n                  <NavLink to={`${publicUser.jobs.DETAIL1}/${job._id}`} className=\"twm-job-title\">\n                    <h4>\n                      {job.jobcategory}\n                      {/* <span className=\"twm-job-post-duration\"> / {new Date(job.createdAt).toLocaleDateString()}</span> */}\n                    </h4>\n                  </NavLink>\n                  <p className=\"twm-job-address\">{job.location || \"Location not specified\"}</p>\n                  <a href={job.website || \"#\"} className=\"twm-job-websites site-text-primary\">\n                    {job.website || \"Website not available\"}\n                  </a>\n                </div>\n                <div className=\"twm-right-content\">\n                  <div className=\"twm-jobs-category green\">\n                    <span className=\"twm-bg-green\">{job.jobtype || \"Job Type\"}</span>\n                  </div>\n                  <div className=\"twm-jobs-amount\">\n                    {job.offeredsalary || \"Salary not specified\"} <span>/ Month</span>\n                  </div>\n                  <NavLink to={`${publicUser.jobs.DETAIL1}/${job._id}`} className=\"twm-jobs-browse site-text-primary\">\n                    Browse Job\n                  </NavLink>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default SectionAvailableJobsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}