{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\common\\\\section-pagination.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionPagination(_ref) {\n  let {\n    totalItems,\n    perPage,\n    currentPage,\n    paginate\n  } = _ref;\n  const totalPages = Math.ceil(totalItems / perPage);\n  const pageNumbers = [];\n  for (let i = 1; i <= totalPages; i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination-outer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-style1\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"clearfix\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"prev\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => currentPage > 1 && paginate(currentPage - 1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-angle-left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), pageNumbers.map(pageNumber => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: currentPage === pageNumber ? \"active\" : \"\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => paginate(pageNumber),\n            children: pageNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"next\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => currentPage < totalPages && paginate(currentPage + 1),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-angle-right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_c = SectionPagination;\nexport default SectionPagination;\nvar _c;\n$RefreshReg$(_c, \"SectionPagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SectionPagination","_ref","totalItems","perPage","currentPage","paginate","totalPages","Math","ceil","pageNumbers","i","push","className","children","href","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","pageNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/common/section-pagination.jsx"],"sourcesContent":["import React from 'react';\n\nfunction SectionPagination({ totalItems, perPage, currentPage, paginate }) {\n    const totalPages = Math.ceil(totalItems / perPage);\n\n    const pageNumbers = [];\n    for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <div className=\"pagination-outer\">\n            <div className=\"pagination-style1\">\n                <ul className=\"clearfix\">\n                    {/* Prev Button */}\n                    <li className=\"prev\">\n                        <a\n                            href=\"#\"\n                            onClick={() => currentPage > 1 && paginate(currentPage - 1)}\n                        >\n                            <span><i className=\"fa fa-angle-left\" /></span>\n                        </a>\n                    </li>\n\n                    {/* Page Numbers */}\n                    {pageNumbers.map((pageNumber) => (\n                        <li key={pageNumber} className={currentPage === pageNumber ? \"active\" : \"\"}>\n                            <a href=\"#\" onClick={() => paginate(pageNumber)}>\n                                {pageNumber}\n                            </a>\n                        </li>\n                    ))}\n\n                    {/* Next Button */}\n                    <li className=\"next\">\n                        <a\n                            href=\"#\"\n                            onClick={() => currentPage < totalPages && paginate(currentPage + 1)}\n                        >\n                            <span><i className=\"fa fa-angle-right\" /></span>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default SectionPagination;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}