{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-apply-job.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink, useLocation, useParams } from \"react-router-dom\";\nimport { publicUser } from \"../../../../../globals/route-names\";\nimport DropzoneComponent from \"react-dropzone-component\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionApplyJob() {\n  _s();\n  const [jobs, setJobs] = useState({}); // Initialize jobs as an empty object\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    answers: [],\n    // Store answers as an array\n    resume: null,\n    jobId: \"\",\n    phone: \"\",\n    videoFiles: [] // Store video files as an array\n  });\n\n  const userId = Cookies.get(\"candidateId\"); // Get the user ID from cookies\n  const location = useLocation();\n  const {\n    jobId\n  } = useParams(); // Assuming you're passing the JobId in the route params\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const jobIdFromUrl = params.get(\"JobId\");\n    if (jobIdFromUrl) {\n      setFormData(prev => ({\n        ...prev,\n        jobId: jobIdFromUrl\n      }));\n    }\n  }, [location]);\n  useEffect(() => {\n    const fetchJobData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJobs(data); // Store the fetched job data\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      }\n    };\n    if (jobId) {\n      fetchJobData(); // Fetch job data if jobId is available\n    }\n  }, [jobId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith(\"answer-\")) {\n      // Dynamically set the answer for each question based on index\n      const index = parseInt(name.split(\"-\")[1], 10);\n      setFormData(prev => {\n        const newAnswers = [...prev.answers];\n        newAnswers[index] = value; // Update the specific answer\n        return {\n          ...prev,\n          answers: newAnswers\n        };\n      });\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleFileChange = file => {\n    setFormData(prev => ({\n      ...prev,\n      resume: file\n    }));\n  };\n  const handleVideoChange = (file, questionIndex) => {\n    setFormData(prev => {\n      const newVideoFiles = [...prev.videoFiles];\n      newVideoFiles[questionIndex] = file; // Assign video to specific question index\n      return {\n        ...prev,\n        videoFiles: newVideoFiles\n      };\n    });\n  };\n  const handleSubmit = async e => {\n    var _jobs$question;\n    e.preventDefault();\n    const formDataToSend = new FormData();\n    formDataToSend.append(\"name\", formData.name);\n    formDataToSend.append(\"email\", formData.email);\n    formDataToSend.append(\"phone\", formData.phone);\n    formDataToSend.append(\"message\", formData.message);\n    formDataToSend.append(\"JobId\", jobId);\n    formDataToSend.append(\"userId\", userId);\n\n    // Construct questionsAndAnswers array from formData.answers and video files\n    const questionsAndAnswers = jobs === null || jobs === void 0 ? void 0 : (_jobs$question = jobs.question) === null || _jobs$question === void 0 ? void 0 : _jobs$question.map((q, index) => ({\n      question: q,\n      answer: formData.answers[index] || \"\",\n      video: formData.videoFiles[index] || null // Associate video with each answer\n    }));\n\n    // Append the questionsAndAnswers to the FormData\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\n    if (formData.resume) {\n      formDataToSend.append(\"resume\", formData.resume);\n    }\n\n    // Add video files to formData\n    formData.videoFiles.forEach((video, index) => {\n      if (video) formDataToSend.append(\"video\", video); // Only append if video exists\n    });\n\n    try {\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\n        method: \"POST\",\n        body: formDataToSend,\n        credentials: \"include\"\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n        console.log(data.message);\n      } else {\n        alert(data.error || \"There was an error submitting your application.\");\n        console.log(data.error || \"There was an error submitting your application.\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"There was an error submitting your application.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twm-tabs-style-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ls-inputicon-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                name: \"name\",\n                required: true,\n                type: \"text\",\n                placeholder: \"Devid Smith\",\n                value: formData.name,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fs-input-icon fa fa-user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ls-inputicon-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                name: \"email\",\n                type: \"email\",\n                required: true,\n                placeholder: \"Devid@example.com\",\n                value: formData.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fs-input-icon fas fa-at\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Mobile No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ls-inputicon-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                name: \"phone\",\n                type: \"text\",\n                required: true,\n                placeholder: \"+91 91462896323\",\n                value: formData.phone,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-mobile-alt fs-input-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 18\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              name: \"message\",\n              rows: 3,\n              required: true,\n              placeholder: \"Message sent to the employer\",\n              value: formData.message,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropzoneComponent, {\n              config: {\n                postUrl: \"/apply-job\"\n              },\n              eventHandlers: {\n                addedfile: handleFileChange\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"If you do not have a resume document, you may write your brief professional profile\", \" \", /*#__PURE__*/_jsxDEV(NavLink, {\n                to: publicUser.pages.CONTACT,\n                className: \"site-text-primary\",\n                children: \"here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), (jobs === null || jobs === void 0 ? void 0 : jobs.question) && jobs.question.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: jobs.question.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Q\", index + 1, \"     \", q]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              name: `answer-${index}`,\n              rows: 3,\n              placeholder: \"Your answer\",\n              value: formData.answers[index] || \"\",\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Upload Video (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(DropzoneComponent, {\n                config: {\n                  postUrl: \"/apply-job\",\n                  acceptedFiles: \"video/*\"\n                },\n                eventHandlers: {\n                  addedfile: file => handleVideoChange(file, index)\n                },\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"site-button\",\n              children: \"Send Application\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(SectionApplyJob, \"Jv9iVRCcdOU0Pfg0sYsmeLlDfDk=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = SectionApplyJob;\nexport default SectionApplyJob;\nvar _c;\n$RefreshReg$(_c, \"SectionApplyJob\");","map":{"version":3,"names":["React","useState","useEffect","NavLink","useLocation","useParams","publicUser","DropzoneComponent","Cookies","jsxDEV","_jsxDEV","SectionApplyJob","_s","jobs","setJobs","formData","setFormData","name","email","message","answers","resume","jobId","phone","videoFiles","userId","get","location","params","URLSearchParams","search","jobIdFromUrl","prev","fetchJobData","response","fetch","ok","data","json","console","error","handleChange","e","value","target","startsWith","index","parseInt","split","newAnswers","handleFileChange","file","handleVideoChange","questionIndex","newVideoFiles","handleSubmit","_jobs$question","preventDefault","formDataToSend","FormData","append","questionsAndAnswers","question","map","q","answer","video","JSON","stringify","forEach","method","body","credentials","alert","log","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","required","type","placeholder","onChange","rows","config","postUrl","eventHandlers","addedfile","to","pages","CONTACT","length","acceptedFiles","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-apply-job.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, useLocation, useParams } from \"react-router-dom\";\r\nimport { publicUser } from \"../../../../../globals/route-names\";\r\nimport DropzoneComponent from \"react-dropzone-component\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction SectionApplyJob() {\r\n  const [jobs, setJobs] = useState({}); // Initialize jobs as an empty object\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n    answers: [], // Store answers as an array\r\n    resume: null,\r\n    jobId: \"\",\r\n    phone:\"\",\r\n    videoFiles: [], // Store video files as an array\r\n  });\r\n\r\n  const userId = Cookies.get(\"candidateId\"); // Get the user ID from cookies\r\n  const location = useLocation();\r\n  const { jobId } = useParams(); // Assuming you're passing the JobId in the route params\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const jobIdFromUrl = params.get(\"JobId\");\r\n    if (jobIdFromUrl) {\r\n      setFormData((prev) => ({ ...prev, jobId: jobIdFromUrl }));\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    const fetchJobData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setJobs(data); // Store the fetched job data\r\n        } else {\r\n          console.error(\"Failed to fetch job data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching job data\", error);\r\n      }\r\n    };\r\n\r\n    if (jobId) {\r\n      fetchJobData(); // Fetch job data if jobId is available\r\n    }\r\n  }, [jobId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name.startsWith(\"answer-\")) {\r\n      // Dynamically set the answer for each question based on index\r\n      const index = parseInt(name.split(\"-\")[1], 10);\r\n      setFormData((prev) => {\r\n        const newAnswers = [...prev.answers];\r\n        newAnswers[index] = value; // Update the specific answer\r\n        return { ...prev, answers: newAnswers };\r\n      });\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (file) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      resume: file,\r\n    }));\r\n  };\r\n\r\n  const handleVideoChange = (file, questionIndex) => {\r\n    setFormData((prev) => {\r\n      const newVideoFiles = [...prev.videoFiles];\r\n      newVideoFiles[questionIndex] = file; // Assign video to specific question index\r\n      return { ...prev, videoFiles: newVideoFiles };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"name\", formData.name);\r\n    formDataToSend.append(\"email\", formData.email);\r\n    formDataToSend.append(\"phone\", formData.phone);\r\n    formDataToSend.append(\"message\", formData.message);\r\n    formDataToSend.append(\"JobId\", jobId);\r\n    formDataToSend.append(\"userId\", userId);\r\n\r\n    // Construct questionsAndAnswers array from formData.answers and video files\r\n    const questionsAndAnswers = jobs?.question?.map((q, index) => ({\r\n      question: q,\r\n      answer: formData.answers[index] || \"\",\r\n      video: formData.videoFiles[index] || null, // Associate video with each answer\r\n    }));\r\n\r\n    // Append the questionsAndAnswers to the FormData\r\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\r\n\r\n    if (formData.resume) {\r\n      formDataToSend.append(\"resume\", formData.resume);\r\n    }\r\n\r\n    // Add video files to formData\r\n    formData.videoFiles.forEach((video, index) => {\r\n      if (video) formDataToSend.append(\"video\", video); // Only append if video exists\r\n    });\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\r\n        method: \"POST\",\r\n        body: formDataToSend,\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(data.message);\r\n        console.log(data.message);\r\n      } else {\r\n        alert(data.error || \"There was an error submitting your application.\");\r\n        console.log(data.error || \"There was an error submitting your application.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"There was an error submitting your application.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"twm-tabs-style-1\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Your Name</label>\r\n              <div className=\"ls-inputicon-box\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  required={true}\r\n                  type=\"text\"\r\n                  placeholder=\"Devid Smith\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <i className=\"fs-input-icon fa fa-user\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Email Address</label>\r\n              <div className=\"ls-inputicon-box\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  required={true}\r\n                  placeholder=\"Devid@example.com\"\r\n                  value={formData.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <i className=\"fs-input-icon fas fa-at\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Mobile No.</label>\r\n              <div className=\"ls-inputicon-box\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"phone\"\r\n                  type=\"text\"\r\n                  required={true}\r\n                  placeholder=\"+91 91462896323\"\r\n                  value={formData.phone}\r\n                  onChange={handleChange}\r\n                />\r\n                 <i className=\"fas fa-mobile-alt fs-input-icon\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Message</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"message\"\r\n                rows={3}\r\n                required={true}\r\n                placeholder=\"Message sent to the employer\"\r\n                value={formData.message}\r\n                onChange={handleChange}\r\n              />\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Upload Resume</label>\r\n              <DropzoneComponent\r\n                config={{\r\n                  postUrl: \"/apply-job\",\r\n                }}\r\n                eventHandlers={{\r\n                  addedfile: handleFileChange,\r\n                }}\r\n              />\r\n              <small>\r\n                If you do not have a resume document, you may write your brief professional profile{\" \"}\r\n                <NavLink to={publicUser.pages.CONTACT} className=\"site-text-primary\">\r\n                  here\r\n                </NavLink>\r\n              </small>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Displaying multiple questions */}\r\n          {jobs?.question && jobs.question.length > 0 && (\r\n            <div className=\"col-md-12\">\r\n              {jobs.question.map((q, index) => (\r\n                <div key={index} className=\"form-group\">\r\n                  <label>Q{index+1}     {q}</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    name={`answer-${index}`}\r\n                    rows={3}\r\n                    placeholder=\"Your answer\"\r\n                    value={formData.answers[index] || \"\"}\r\n                    onChange={handleChange}   \r\n                    required={true}\r\n                  />\r\n                  <div className=\"form-group\">\r\n                    <label>Upload Video (Optional)</label>\r\n                    <DropzoneComponent\r\n  config={{\r\n    postUrl: \"/apply-job\",\r\n    acceptedFiles: \"video/*\",\r\n   \r\n  }}\r\n  eventHandlers={{\r\n    addedfile: (file) => handleVideoChange(file, index),\r\n \r\n  }}\r\n  \r\n  required\r\n/>\r\n\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <div className=\"text-left\">\r\n              <button type=\"submit\" className=\"site-button\">\r\n                Send Application\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SectionApplyJob;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}