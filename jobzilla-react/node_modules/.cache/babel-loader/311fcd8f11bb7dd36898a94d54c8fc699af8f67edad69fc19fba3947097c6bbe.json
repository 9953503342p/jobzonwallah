{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-apply-job.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport Dropzone from \"react-dropzone\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionApplyJob() {\n  _s();\n  var _jobs$question2;\n  const [jobs, setJobs] = useState({});\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    answers: [],\n    resume: null,\n    video: [],\n    jobId: \"\"\n  });\n  const [uploadStatus, setUploadStatus] = useState({\n    resume: \"\",\n    video: []\n  });\n  const [errors, setErrors] = useState({});\n  const userId = Cookies.get(\"candidateId\");\n  const location = useLocation();\n  const {\n    jobId\n  } = useParams();\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const jobIdFromUrl = params.get(\"JobId\");\n    if (jobIdFromUrl) {\n      setFormData(prev => ({\n        ...prev,\n        jobId: jobIdFromUrl\n      }));\n    }\n  }, [location]);\n  useEffect(() => {\n    const fetchJobData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJobs(data);\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      }\n    };\n    if (jobId) {\n      fetchJobData();\n    }\n  }, [jobId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith(\"answer-\")) {\n      const index = parseInt(name.split(\"-\")[1], 10);\n      setFormData(prev => {\n        const newAnswers = [...prev.answers];\n        newAnswers[index] = value;\n        return {\n          ...prev,\n          answers: newAnswers\n        };\n      });\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleFileChange = function (acceptedFiles, type) {\n    let index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const file = acceptedFiles[0];\n    if (index !== null) {\n      // Associating video with a specific question (index)\n      setFormData(prev => {\n        const newVideos = [...prev.video];\n        newVideos[index] = file;\n        return {\n          ...prev,\n          video: newVideos\n        };\n      });\n    } else {\n      // General resume file\n      setFormData(prev => ({\n        ...prev,\n        [type]: file\n      }));\n    }\n    setUploadStatus(prev => ({\n      ...prev,\n      [type]: file ? file.name : \"\" // Show file name or an empty string if no file\n    }));\n  };\n\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name) newErrors.name = \"Name is required.\";\n    if (!formData.email) newErrors.email = \"Email is required.\";\n    if (!formData.resume) newErrors.resume = \"Resume is required.\";\n    return newErrors;\n  };\n  const handleSubmit = async e => {\n    var _jobs$question;\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    const formDataToSend = new FormData();\n    formDataToSend.append(\"name\", formData.name);\n    formDataToSend.append(\"email\", formData.email);\n    formDataToSend.append(\"message\", formData.message);\n    formDataToSend.append(\"JobId\", jobId);\n    formDataToSend.append(\"userId\", userId);\n    const questionsAndAnswers = jobs === null || jobs === void 0 ? void 0 : (_jobs$question = jobs.question) === null || _jobs$question === void 0 ? void 0 : _jobs$question.map((q, index) => ({\n      question: q,\n      answer: formData.answers[index] || \"\"\n    }));\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\n    if (formData.resume) formDataToSend.append(\"resume\", formData.resume);\n    if (formData.video) formDataToSend.append(\"video\", formData.video);\n    try {\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\n        method: \"POST\",\n        body: formDataToSend,\n        credentials: \"include\"\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n      } else {\n        alert(data.error || \"There was an error submitting your application.\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"There was an error submitting your application.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-6 max-w-xl mx-auto p-4 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-semibold\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control w-full p-3 border border-gray-300 rounded-md\",\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Devid Smith\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-semibold\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control w-full p-3 border border-gray-300 rounded-md\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Devid@example.com\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), (jobs === null || jobs === void 0 ? void 0 : (_jobs$question2 = jobs.question) === null || _jobs$question2 === void 0 ? void 0 : _jobs$question2.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: jobs.question.map((q, index) => {\n        var _uploadStatus$video$i;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-gray-700 font-semibold\",\n            children: q\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control w-full p-3 border border-gray-300 rounded-md\",\n            name: `answer-${index}`,\n            rows: 3,\n            placeholder: \"Your answer\",\n            value: formData.answers[index] || \"\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 font-semibold\",\n              children: \"Upload Video for this Answer (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n              onDrop: acceptedFiles => handleFileChange(acceptedFiles, \"video\", index),\n              children: _ref => {\n                let {\n                  getRootProps,\n                  getInputProps\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ...getRootProps(),\n                  className: \"dropzone p-6 border-2 border-dashed rounded-md cursor-pointer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    ...getInputProps()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-center text-gray-500\",\n                    children: \"Drag & drop your video here, or click to select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), uploadStatus.video[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mt-2 text-sm text-gray-500\",\n              children: [\"Selected Video: \", (_uploadStatus$video$i = uploadStatus.video[index]) === null || _uploadStatus$video$i === void 0 ? void 0 : _uploadStatus$video$i.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-semibold\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control w-full p-3 border border-gray-300 rounded-md\",\n        name: \"message\",\n        rows: 3,\n        placeholder: \"Message sent to the employer\",\n        value: formData.message,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-semibold\",\n        children: \"Upload Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        onDrop: acceptedFiles => handleFileChange(acceptedFiles, \"resume\"),\n        children: _ref2 => {\n          let {\n            getRootProps,\n            getInputProps\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ...getRootProps(),\n            className: \"dropzone p-6 border-2 border-dashed rounded-md cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center text-gray-500\",\n              children: \"Drag & drop your resume here, or click to select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), uploadStatus.resume && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-sm text-gray-500\",\n        children: [\"Selected File: \", uploadStatus.resume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 33\n      }, this), errors.resume && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: errors.resume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700\",\n        children: \"Send Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(SectionApplyJob, \"Zd0wOl+8pgw8viQAg3CTt1u0PwE=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = SectionApplyJob;\nexport default SectionApplyJob;\nvar _c;\n$RefreshReg$(_c, \"SectionApplyJob\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useParams","Dropzone","Cookies","jsxDEV","_jsxDEV","SectionApplyJob","_s","_jobs$question2","jobs","setJobs","formData","setFormData","name","email","message","answers","resume","video","jobId","uploadStatus","setUploadStatus","errors","setErrors","userId","get","location","params","URLSearchParams","search","jobIdFromUrl","prev","fetchJobData","response","fetch","ok","data","json","console","error","handleChange","e","value","target","startsWith","index","parseInt","split","newAnswers","handleFileChange","acceptedFiles","type","arguments","length","undefined","file","newVideos","validateForm","newErrors","handleSubmit","_jobs$question","preventDefault","validationErrors","Object","keys","formDataToSend","FormData","append","questionsAndAnswers","question","map","q","answer","JSON","stringify","method","body","credentials","alert","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","_uploadStatus$video$i","rows","onDrop","_ref","getRootProps","getInputProps","_ref2","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-apply-job.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction SectionApplyJob() {\r\n  const [jobs, setJobs] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n    answers: [],\r\n    resume: null,\r\n    video: [],\r\n    jobId: \"\",\r\n  });\r\n  const [uploadStatus, setUploadStatus] = useState({ resume: \"\", video: [] });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const userId = Cookies.get(\"candidateId\");\r\n  const location = useLocation();\r\n  const { jobId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const jobIdFromUrl = params.get(\"JobId\");\r\n    if (jobIdFromUrl) {\r\n      setFormData((prev) => ({ ...prev, jobId: jobIdFromUrl }));\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    const fetchJobData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setJobs(data);\r\n        } else {\r\n          console.error(\"Failed to fetch job data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching job data\", error);\r\n      }\r\n    };\r\n\r\n    if (jobId) {\r\n      fetchJobData();\r\n    }\r\n  }, [jobId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name.startsWith(\"answer-\")) {\r\n      const index = parseInt(name.split(\"-\")[1], 10);\r\n      setFormData((prev) => {\r\n        const newAnswers = [...prev.answers];\r\n        newAnswers[index] = value;\r\n        return { ...prev, answers: newAnswers };\r\n      });\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (acceptedFiles, type, index = null) => {\r\n    const file = acceptedFiles[0];\r\n\r\n    if (index !== null) {\r\n      // Associating video with a specific question (index)\r\n      setFormData((prev) => {\r\n        const newVideos = [...prev.video];\r\n        newVideos[index] = file;\r\n        return { ...prev, video: newVideos };\r\n      });\r\n    } else {\r\n      // General resume file\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [type]: file,\r\n      }));\r\n    }\r\n\r\n    setUploadStatus((prev) => ({\r\n      ...prev,\r\n      [type]: file ? file.name : \"\", // Show file name or an empty string if no file\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!formData.name) newErrors.name = \"Name is required.\";\r\n    if (!formData.email) newErrors.email = \"Email is required.\";\r\n    if (!formData.resume) newErrors.resume = \"Resume is required.\";\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"name\", formData.name);\r\n    formDataToSend.append(\"email\", formData.email);\r\n    formDataToSend.append(\"message\", formData.message);\r\n    formDataToSend.append(\"JobId\", jobId);\r\n    formDataToSend.append(\"userId\", userId);\r\n\r\n    const questionsAndAnswers = jobs?.question?.map((q, index) => ({\r\n      question: q,\r\n      answer: formData.answers[index] || \"\",\r\n    }));\r\n\r\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\r\n\r\n    if (formData.resume) formDataToSend.append(\"resume\", formData.resume);\r\n    if (formData.video) formDataToSend.append(\"video\", formData.video);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\r\n        method: \"POST\",\r\n        body: formDataToSend,\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(data.message);\r\n      } else {\r\n        alert(data.error || \"There was an error submitting your application.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"There was an error submitting your application.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6 max-w-xl mx-auto p-4 bg-white rounded-lg shadow-md\">\r\n      <div className=\"form-group\">\r\n        <label className=\"block text-gray-700 font-semibold\">Your Name</label>\r\n        <input\r\n          className=\"form-control w-full p-3 border border-gray-300 rounded-md\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          placeholder=\"Devid Smith\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n        />\r\n        {errors.name && <span className=\"text-red-500 text-sm\">{errors.name}</span>}\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"block text-gray-700 font-semibold\">Email Address</label>\r\n        <input\r\n          className=\"form-control w-full p-3 border border-gray-300 rounded-md\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Devid@example.com\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n        />\r\n        {errors.email && <span className=\"text-red-500 text-sm\">{errors.email}</span>}\r\n      </div>\r\n\r\n      {/* Dynamically render job-specific questions */}\r\n      {jobs?.question?.length > 0 && (\r\n        <div className=\"form-group\">\r\n          {jobs.question.map((q, index) => (\r\n            <div key={index}>\r\n              <label className=\"block text-gray-700 font-semibold\">{q}</label>\r\n              <textarea\r\n                className=\"form-control w-full p-3 border border-gray-300 rounded-md\"\r\n                name={`answer-${index}`}\r\n                rows={3}\r\n                placeholder=\"Your answer\"\r\n                value={formData.answers[index] || \"\"}\r\n                onChange={handleChange}\r\n              />\r\n              <div className=\"mt-3\">\r\n                <label className=\"block text-gray-700 font-semibold\">Upload Video for this Answer (Optional)</label>\r\n                <Dropzone onDrop={(acceptedFiles) => handleFileChange(acceptedFiles, \"video\", index)}>\r\n                  {({ getRootProps, getInputProps }) => (\r\n                    <div {...getRootProps()} className=\"dropzone p-6 border-2 border-dashed rounded-md cursor-pointer\">\r\n                      <input {...getInputProps()} />\r\n                      <p className=\"text-center text-gray-500\">Drag & drop your video here, or click to select</p>\r\n                    </div>\r\n                  )}\r\n                </Dropzone>\r\n                {uploadStatus.video[index] && (\r\n                  <p className=\"mt-2 text-sm text-gray-500\">Selected Video: {uploadStatus.video[index]?.name}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"form-group\">\r\n        <label className=\"block text-gray-700 font-semibold\">Message</label>\r\n        <textarea\r\n          className=\"form-control w-full p-3 border border-gray-300 rounded-md\"\r\n          name=\"message\"\r\n          rows={3}\r\n          placeholder=\"Message sent to the employer\"\r\n          value={formData.message}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n\r\n      {/* Resume File Upload */}\r\n      <div className=\"form-group\">\r\n        <label className=\"block text-gray-700 font-semibold\">Upload Resume</label>\r\n        <Dropzone onDrop={(acceptedFiles) => handleFileChange(acceptedFiles, \"resume\")}>\r\n          {({ getRootProps, getInputProps }) => (\r\n            <div {...getRootProps()} className=\"dropzone p-6 border-2 border-dashed rounded-md cursor-pointer\">\r\n              <input {...getInputProps()} />\r\n              <p className=\"text-center text-gray-500\">Drag & drop your resume here, or click to select</p>\r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n        {uploadStatus.resume && <p className=\"mt-2 text-sm text-gray-500\">Selected File: {uploadStatus.resume}</p>}\r\n        {errors.resume && <span className=\"text-red-500 text-sm\">{errors.resume}</span>}\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\" className=\"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700\">\r\n          Send Application\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SectionApplyJob;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}