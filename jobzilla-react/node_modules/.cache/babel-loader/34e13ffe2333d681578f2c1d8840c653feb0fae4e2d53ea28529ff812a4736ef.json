{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\candidates\\\\section-can-skills.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionCandidateSkills() {\n  _s();\n  const [resumeData, setResumeData] = useState(null); // State to store the fetched resume data\n  const {\n    resumeId\n  } = useParams();\n  useEffect(() => {\n    // Fetch resume data based on resumeId from the backend\n    fetch(`http://localhost:8080/resume/${resumeId}`).then(response => response.json()) // Parse the JSON response\n    .then(data => {\n      setResumeData(data); // Save the fetched data to state\n    }).catch(error => {\n      console.error('Error fetching resume data:', error);\n    });\n  }, [resumeId]); // Ensure useEffect runs again if resumeId changes\n\n  if (!resumeData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this); // Show loading while data is being fetched\n  }\n\n  // Extracting skills directly from the resume data\n  const skills = resumeData.KeySkills || []; // Default to an empty array if KeySkills is not available\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"twm-s-title\",\n      children: \"Skills\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tw-sidebar-tags-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tagcloud\",\n        children: skills.length > 0 ? skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: skill\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this) // Render each skill dynamically\n        ) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No skills available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this) // Display a message if no skills are available\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionCandidateSkills, \"Lz4SY2tuYQrzECaHX/7jODxcFFs=\", false, function () {\n  return [useParams];\n});\n_c = SectionCandidateSkills;\nexport default SectionCandidateSkills;\nvar _c;\n$RefreshReg$(_c, \"SectionCandidateSkills\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionCandidateSkills","_s","resumeData","setResumeData","resumeId","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","skills","KeySkills","className","length","map","skill","index","href","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/candidates/section-can-skills.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction SectionCandidateSkills() {\n    const [resumeData, setResumeData] = useState(null);  // State to store the fetched resume data\n    const { resumeId } = useParams();\n\n    useEffect(() => {\n        // Fetch resume data based on resumeId from the backend\n        fetch(`http://localhost:8080/resume/${resumeId}`)\n            .then((response) => response.json())  // Parse the JSON response\n            .then((data) => {\n                setResumeData(data);  // Save the fetched data to state\n            })\n            .catch((error) => {\n                console.error('Error fetching resume data:', error);\n            });\n    }, [resumeId]);  // Ensure useEffect runs again if resumeId changes\n\n    if (!resumeData) {\n        return <div>Loading...</div>;  // Show loading while data is being fetched\n    }\n\n    // Extracting skills directly from the resume data\n    const skills = resumeData.KeySkills || [];  // Default to an empty array if KeySkills is not available\n\n    return (\n        <>\n            <h4 className=\"twm-s-title\">Skills</h4>\n            <div className=\"tw-sidebar-tags-wrap\">\n                <div className=\"tagcloud\">\n                    {skills.length > 0 ? (\n                        skills.map((skill, index) => (\n                            <a key={index} href=\"#\">{skill}</a>  // Render each skill dynamically\n                        ))\n                    ) : (\n                        <p>No skills available</p>  // Display a message if no skills are available\n                    )}\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SectionCandidateSkills;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,SAASC,sBAAsBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACrD,MAAM;IAAEU;EAAS,CAAC,GAAGT,SAAS,CAAC,CAAC;EAEhCF,SAAS,CAAC,MAAM;IACZ;IACAY,KAAK,CAAE,gCAA+BD,QAAS,EAAC,CAAC,CAC5CE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAE;IAAA,CACrCF,IAAI,CAAEG,IAAI,IAAK;MACZN,aAAa,CAACM,IAAI,CAAC,CAAC,CAAE;IAC1B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACV,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC,CAAC,CAAE;;EAEjB,IAAI,CAACF,UAAU,EAAE;IACb,oBAAOL,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAE;EACnC;;EAEA;EACA,MAAMC,MAAM,GAAGhB,UAAU,CAACiB,SAAS,IAAI,EAAE,CAAC,CAAE;;EAE5C,oBACItB,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACIhB,OAAA;MAAIuB,SAAS,EAAC,aAAa;MAAAP,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCpB,OAAA;MAAKuB,SAAS,EAAC,sBAAsB;MAAAP,QAAA,eACjChB,OAAA;QAAKuB,SAAS,EAAC,UAAU;QAAAP,QAAA,EACpBK,MAAM,CAACG,MAAM,GAAG,CAAC,GACdH,MAAM,CAACI,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACpB3B,OAAA;UAAe4B,IAAI,EAAC,GAAG;UAAAZ,QAAA,EAAEU;QAAK,GAAtBC,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqB,CAAC,CAAE;QACxC,CAAC,gBAEFpB,OAAA;UAAAgB,QAAA,EAAG;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,CAAE;MAC/B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACR,CAAC;AAEX;AAAChB,EAAA,CAvCQD,sBAAsB;EAAA,QAENL,SAAS;AAAA;AAAA+B,EAAA,GAFzB1B,sBAAsB;AAyC/B,eAAeA,sBAAsB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}