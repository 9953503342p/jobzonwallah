{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\common\\\\section-office-photos1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JobZImage from \"../../../../common/jobz-img\";\nimport { publicUrlFor } from \"../../../../../globals/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionOfficePhotos1() {\n  _s();\n  const {\n    jobId\n  } = useParams(); // Extract jobId from the URL\n  const [job, setJob] = useState(null);\n  useEffect(() => {\n    const fetchJobData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJob(data); // Store the fetched job data\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      }\n    };\n    if (jobId) {\n      fetchJobData(); // Fetch job data if jobId is available\n    }\n  }, [jobId]); // Re-run the effect if jobId changes\n\n  // If job is still loading or not found\n  if (!job) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"twm-s-title\",\n      children: \"Office Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tw-sidebar-gallery\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: job.gallery && job.gallery.map((image, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tw-service-gallery-thumb\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"image}\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"elem\",\n              href: publicUrlFor(`http://localhost:8080/${image}`),\n              title: `Title ${index + 1}`,\n              \"data-lcl-author\": true,\n              \"data-lcl-thumb\": publicUrlFor(`images/gallery/thumb/${image}`),\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8080/${image}`,\n                alt: `Gallery image ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-file-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionOfficePhotos1, \"jaiVn6sN4iwyBLa8ETktd/G9K4s=\", false, function () {\n  return [useParams];\n});\n_c = SectionOfficePhotos1;\nexport default SectionOfficePhotos1;\nvar _c;\n$RefreshReg$(_c, \"SectionOfficePhotos1\");","map":{"version":3,"names":["React","useState","useEffect","useParams","JobZImage","publicUrlFor","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionOfficePhotos1","_s","jobId","job","setJob","fetchJobData","response","fetch","ok","data","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","gallery","map","image","index","href","title","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/common/section-office-photos1.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"; \nimport JobZImage from \"../../../../common/jobz-img\";\nimport { publicUrlFor } from \"../../../../../globals/constants\";\n\nfunction SectionOfficePhotos1() {\n    const { jobId } = useParams();  // Extract jobId from the URL\n    const [job, setJob] = useState(null);\n  \n    useEffect(() => {\n      const fetchJobData = async () => {\n        try {\n          const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\n          if (response.ok) {\n            const data = await response.json();\n            setJob(data);  // Store the fetched job data\n          } else {\n            console.error(\"Failed to fetch job data\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching job data\", error);\n        }\n      };\n  \n      if (jobId) {\n        fetchJobData();  // Fetch job data if jobId is available\n      }\n    }, [jobId]);  // Re-run the effect if jobId changes\n  \n    // If job is still loading or not found\n    if (!job) {\n      return <div>Loading...</div>;\n    }\n  return (\n    <>\n      <h4 className=\"twm-s-title\">Office Photos</h4>\n      <div className=\"tw-sidebar-gallery\">\n        <ul>\n          {job.gallery && job.gallery.map((image, index) => (\n           \n            <li key={index}>\n              <div className=\"tw-service-gallery-thumb\">\n              <p>{}image}</p>\n                <a\n                  className=\"elem\"\n                  href={publicUrlFor(`http://localhost:8080/${image}`)}\n                  title={`Title ${index + 1}`}\n                  data-lcl-author\n                  data-lcl-thumb={publicUrlFor(`images/gallery/thumb/${image}`)}\n                >\n                    <h1></h1>\n                  <img\n                    src={(`http://localhost:8080/${image}`)}\n                    alt={`Gallery image ${index + 1}`}\n                  />\n                  <i className=\"fa fa-file-image\" />\n                </a>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default SectionOfficePhotos1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}