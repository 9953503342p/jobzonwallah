{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-jobs-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport JobZImage from \"../../../../common/jobz-img\";\nimport { NavLink } from \"react-router-dom\";\nimport SectionPagination from \"../common/section-pagination\";\nimport { publicUser } from \"../../../../../globals/route-names\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionJobsGrid() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/post-job\").then(response => response.json()).then(data => setJobs(data)).catch(error => console.error(\"Error fetching jobs:\", error));\n  }, []);\n  function getDateDifference(startDate) {\n    const now = new Date();\n\n    // Check if startDate is in 'DD/MM/YYYY' format and convert to 'YYYY-MM-DD'\n    const dateParts = startDate.split('/'); // Split by '/'\n\n    // Validate the date parts and convert to 'YYYY-MM-DD' format\n    if (dateParts.length === 3) {\n      const formattedStartDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\n      startDate = formattedStartDate;\n    }\n    const start = new Date(startDate);\n\n    // Check if the date is valid\n    if (isNaN(start)) {\n      console.error('Invalid start date:', startDate);\n      return {\n        diffDays: 0,\n        diffMonths: 0\n      }; // Return default values if invalid\n    }\n\n    const diffTime = now - start;\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30)); // Approximate months\n\n    return {\n      diffDays,\n      diffMonths\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No jobs available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : jobs.map((job, index) => {\n      const {\n        diffDays\n      } = getDateDifference(job.startDate); // Assuming `startDate` is in the job data\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6 col-md-12 m-b30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twm-jobs-grid-style1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-media\",\n            children: /*#__PURE__*/_jsxDEV(JobZImage, {\n              src: job.companyImage || \"default.jpg\",\n              alt: job.companyName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"twm-job-post-duration\",\n            children: [diffDays, \" days ago\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-jobs-category green\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `twm-bg-${job.jobCategory.toLowerCase()}`,\n              children: job.jobCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-mid-content\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: publicUser.jobs.DETAIL1,\n              className: \"twm-job-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: job.jobTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"twm-job-address\",\n              children: job.companyAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: job.companyWebsite,\n              className: \"twm-job-websites site-text-primary\",\n              children: job.companyWebsite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-right-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-jobs-amount\",\n              children: [\"$\", job.salary, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"/ \", job.paymentType]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: publicUser.jobs.DETAIL1,\n              className: \"twm-jobs-browse site-text-primary\",\n              children: \"Browse Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(SectionJobsGrid, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = SectionJobsGrid;\nexport default SectionJobsGrid;\nvar _c;\n$RefreshReg$(_c, \"SectionJobsGrid\");","map":{"version":3,"names":["React","useEffect","useState","JobZImage","NavLink","SectionPagination","publicUser","jsxDEV","_jsxDEV","SectionJobsGrid","_s","jobs","setJobs","fetch","then","response","json","data","catch","error","console","getDateDifference","startDate","now","Date","dateParts","split","length","formattedStartDate","start","isNaN","diffDays","diffMonths","diffTime","Math","floor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","index","src","companyImage","alt","companyName","jobCategory","toLowerCase","to","DETAIL1","jobTitle","companyAddress","href","companyWebsite","salary","paymentType","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-jobs-grid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport JobZImage from \"../../../../common/jobz-img\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SectionPagination from \"../common/section-pagination\";\r\nimport { publicUser } from \"../../../../../globals/route-names\";\r\n\r\nfunction SectionJobsGrid() {\r\n  const [jobs, setJobs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/post-job\")\r\n      .then((response) => response.json())\r\n      .then((data) => setJobs(data))\r\n      .catch((error) => console.error(\"Error fetching jobs:\", error));\r\n  }, []);\r\n\r\n  function getDateDifference(startDate) {\r\n    const now = new Date();\r\n\r\n    // Check if startDate is in 'DD/MM/YYYY' format and convert to 'YYYY-MM-DD'\r\n    const dateParts = startDate.split('/'); // Split by '/'\r\n    \r\n    // Validate the date parts and convert to 'YYYY-MM-DD' format\r\n    if (dateParts.length === 3) {\r\n      const formattedStartDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\r\n      startDate = formattedStartDate;\r\n    }\r\n\r\n    const start = new Date(startDate);\r\n\r\n    // Check if the date is valid\r\n    if (isNaN(start)) {\r\n      console.error('Invalid start date:', startDate);\r\n      return { diffDays: 0, diffMonths: 0 }; // Return default values if invalid\r\n    }\r\n\r\n    const diffTime = now - start;\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30)); // Approximate months\r\n\r\n    return { diffDays, diffMonths };\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {jobs.length === 0 ? (\r\n        <div>No jobs available</div>\r\n      ) : (\r\n        jobs.map((job, index) => {\r\n          const { diffDays } = getDateDifference(job.startDate); // Assuming `startDate` is in the job data\r\n          return (\r\n            <div className=\"col-lg-6 col-md-12 m-b30\" key={index}>\r\n              <div className=\"twm-jobs-grid-style1\">\r\n                <div className=\"twm-media\">\r\n                  <JobZImage src={job.companyImage || \"default.jpg\"} alt={job.companyName} />\r\n                </div>\r\n                <span className=\"twm-job-post-duration\">{diffDays} days ago</span>\r\n                <div className=\"twm-jobs-category green\">\r\n                  <span className={`twm-bg-${job.jobCategory.toLowerCase()}`}>{job.jobCategory}</span>\r\n                </div>\r\n                <div className=\"twm-mid-content\">\r\n                  <NavLink to={publicUser.jobs.DETAIL1} className=\"twm-job-title\">\r\n                    <h4>{job.jobTitle}</h4>\r\n                  </NavLink>\r\n                  <p className=\"twm-job-address\">{job.companyAddress}</p>\r\n                  <a href={job.companyWebsite} className=\"twm-job-websites site-text-primary\">{job.companyWebsite}</a>\r\n                </div>\r\n                <div className=\"twm-right-content\">\r\n                  <div className=\"twm-jobs-amount\">${job.salary} <span>/ {job.paymentType}</span></div>\r\n                  <NavLink to={publicUser.jobs.DETAIL1} className=\"twm-jobs-browse site-text-primary\">Browse Job</NavLink>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SectionJobsGrid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}