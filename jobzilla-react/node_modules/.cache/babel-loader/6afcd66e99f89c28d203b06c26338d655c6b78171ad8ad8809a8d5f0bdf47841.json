{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-jobs-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport JobZImage from \"../../../../common/jobz-img\";\nimport { NavLink } from \"react-router-dom\";\nimport SectionPagination from \"../common/section-pagination\";\nimport { publicUser } from \"../../../../../globals/route-names\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionJobsGrid() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage] = useState(5); // Number of jobs per page\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/post-job\").then(response => response.json()).then(data => setJobs(data)).catch(error => console.error(\"Error fetching jobs:\", error));\n  }, []);\n\n  // Get the jobs for the current page\n  const indexOfLastJob = currentPage * perPage;\n  const indexOfFirstJob = indexOfLastJob - perPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n\n  // Handle pagination click\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  function getDateDifference(startDate) {\n    const now = new Date();\n    const dateParts = startDate.split('/');\n    if (dateParts.length === 3) {\n      const formattedStartDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\n      startDate = formattedStartDate;\n    }\n    const start = new Date(startDate);\n    if (isNaN(start)) {\n      console.error('Invalid start date:', startDate);\n      return {\n        diffDays: 0,\n        diffMonths: 0\n      };\n    }\n    const diffTime = now - start;\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\n    return {\n      diffDays,\n      diffMonths\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6 col-md-12 m-b30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twm-jobs-grid-style1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-media\",\n            children: /*#__PURE__*/_jsxDEV(JobZImage, {\n              src: \"images/jobs-company/pic1.jpg\",\n              alt: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"twm-job-post-duration\",\n            children: [getDateDifference(job.startDate).diffDays, \" days ago\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-jobs-category green\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"twm-bg-green\",\n              children: \"New\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-mid-content\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: publicUser.jobs.DETAIL1,\n              className: \"twm-job-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"twm-job-address\",\n              children: job.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: job.companyWebsite,\n              className: \"twm-job-websites site-text-primary\",\n              children: job.companyWebsite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-right-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-jobs-amount\",\n              children: [\"$\", job.salary, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"/ Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 64\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: publicUser.jobs.DETAIL1,\n              className: \"twm-jobs-browse site-text-primary\",\n              children: \"Browse Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, job._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionPagination, {\n      totalItems: jobs.length,\n      perPage: perPage,\n      currentPage: currentPage,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionJobsGrid, \"O2rKb8RBc7Y8TfJ5kT1qgvXk25E=\");\n_c = SectionJobsGrid;\nexport default SectionJobsGrid;\nvar _c;\n$RefreshReg$(_c, \"SectionJobsGrid\");","map":{"version":3,"names":["React","useEffect","useState","JobZImage","NavLink","SectionPagination","publicUser","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionJobsGrid","_s","jobs","setJobs","currentPage","setCurrentPage","perPage","fetch","then","response","json","data","catch","error","console","indexOfLastJob","indexOfFirstJob","currentJobs","slice","paginate","pageNumber","getDateDifference","startDate","now","Date","dateParts","split","length","formattedStartDate","start","isNaN","diffDays","diffMonths","diffTime","Math","floor","children","className","map","job","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","DETAIL1","title","location","href","companyWebsite","salary","_id","totalItems","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-jobs-grid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport JobZImage from \"../../../../common/jobz-img\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SectionPagination from \"../common/section-pagination\";\r\nimport { publicUser } from \"../../../../../globals/route-names\";\r\n\r\nfunction SectionJobsGrid() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [perPage] = useState(5);  // Number of jobs per page\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/post-job\")\r\n      .then((response) => response.json())\r\n      .then((data) => setJobs(data))\r\n      .catch((error) => console.error(\"Error fetching jobs:\", error));\r\n  }, []);\r\n\r\n  // Get the jobs for the current page\r\n  const indexOfLastJob = currentPage * perPage;\r\n  const indexOfFirstJob = indexOfLastJob - perPage;\r\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\r\n\r\n  // Handle pagination click\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  function getDateDifference(startDate) {\r\n    const now = new Date();\r\n\r\n    const dateParts = startDate.split('/');\r\n    if (dateParts.length === 3) {\r\n      const formattedStartDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\r\n      startDate = formattedStartDate;\r\n    }\r\n\r\n    const start = new Date(startDate);\r\n    if (isNaN(start)) {\r\n      console.error('Invalid start date:', startDate);\r\n      return { diffDays: 0, diffMonths: 0 };\r\n    }\r\n\r\n    const diffTime = now - start;\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    const diffMonths = Math.floor(diffTime / (1000 * 60 * 60 * 24 * 30));\r\n\r\n    return { diffDays, diffMonths };\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        {currentJobs.map((job) => (\r\n          <div className=\"col-lg-6 col-md-12 m-b30\" key={job._id}>\r\n            <div className=\"twm-jobs-grid-style1\">\r\n              <div className=\"twm-media\">\r\n                <JobZImage src=\"images/jobs-company/pic1.jpg\" alt=\"#\" />\r\n              </div>\r\n              <span className=\"twm-job-post-duration\">{getDateDifference(job.startDate).diffDays} days ago</span>\r\n              <div className=\"twm-jobs-category green\">\r\n                <span className=\"twm-bg-green\">New</span>\r\n              </div>\r\n              <div className=\"twm-mid-content\">\r\n                <NavLink to={publicUser.jobs.DETAIL1} className=\"twm-job-title\">\r\n                  <h4>{job.title}</h4>\r\n                </NavLink>\r\n                <p className=\"twm-job-address\">{job.location}</p>\r\n                <a href={job.companyWebsite} className=\"twm-job-websites site-text-primary\">{job.companyWebsite}</a>\r\n              </div>\r\n              <div className=\"twm-right-content\">\r\n                <div className=\"twm-jobs-amount\">${job.salary} <span>/ Month</span></div>\r\n                <NavLink to={publicUser.jobs.DETAIL1} className=\"twm-jobs-browse site-text-primary\">Browse Job</NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <SectionPagination\r\n        totalItems={jobs.length}\r\n        perPage={perPage}\r\n        currentPage={currentPage}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SectionJobsGrid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}