{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-apply-job.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport Dropzone from \"react-dropzone\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionApplyJob() {\n  _s();\n  var _jobs$question2;\n  const [jobs, setJobs] = useState({});\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    answers: [],\n    resume: null,\n    video: [],\n    jobId: \"\"\n  });\n  const [uploadStatus, setUploadStatus] = useState({\n    resume: \"\",\n    video: []\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false); // Loading state for job data\n\n  const userId = Cookies.get(\"candidateId\");\n  const location = useLocation();\n  const {\n    jobId\n  } = useParams();\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const jobIdFromUrl = params.get(\"JobId\");\n    if (jobIdFromUrl) {\n      setFormData(prev => ({\n        ...prev,\n        jobId: jobIdFromUrl\n      }));\n    }\n  }, [location]);\n  useEffect(() => {\n    const fetchJobData = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJobs(data);\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (jobId) {\n      fetchJobData();\n    }\n  }, [jobId]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith(\"answer-\")) {\n      const index = parseInt(name.split(\"-\")[1], 10);\n      setFormData(prev => {\n        const newAnswers = [...prev.answers];\n        newAnswers[index] = value;\n        return {\n          ...prev,\n          answers: newAnswers\n        };\n      });\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleFileChange = function (acceptedFiles, type) {\n    let index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const file = acceptedFiles[0];\n    if (index !== null) {\n      setFormData(prev => {\n        const newVideos = [...prev.video];\n        newVideos[index] = file;\n        return {\n          ...prev,\n          video: newVideos\n        };\n      });\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [type]: file\n      }));\n    }\n    setUploadStatus(prev => ({\n      ...prev,\n      [type]: file ? file.name : \"\"\n    }));\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.name) newErrors.name = \"Name is required.\";\n    if (!formData.email) newErrors.email = \"Email is required.\";\n    if (!formData.resume) newErrors.resume = \"Resume is required.\";\n    return newErrors;\n  };\n  const handleSubmit = async e => {\n    var _jobs$question;\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    const formDataToSend = new FormData();\n    formDataToSend.append(\"name\", formData.name);\n    formDataToSend.append(\"email\", formData.email);\n    formDataToSend.append(\"message\", formData.message);\n    formDataToSend.append(\"JobId\", jobId);\n    formDataToSend.append(\"userId\", userId);\n    const questionsAndAnswers = jobs === null || jobs === void 0 ? void 0 : (_jobs$question = jobs.question) === null || _jobs$question === void 0 ? void 0 : _jobs$question.map((q, index) => ({\n      question: q,\n      answer: formData.answers[index] || \"\"\n    }));\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\n    if (formData.resume) formDataToSend.append(\"resume\", formData.resume);\n    if (formData.video) formDataToSend.append(\"video\", formData.video);\n    try {\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\n        method: \"POST\",\n        body: formDataToSend,\n        credentials: \"include\"\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n      } else {\n        alert(data.error || \"There was an error submitting your application.\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"There was an error submitting your application.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-6 max-w-xl mx-auto p-4 bg-white rounded-lg shadow-md\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-gray-600\",\n      children: \"Loading job details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 font-semibold\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control w-full p-3 border border-gray-300 rounded-md\",\n          name: \"name\",\n          type: \"text\",\n          placeholder: \"Devid Smith\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 font-semibold\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control w-full p-3 border border-gray-300 rounded-md\",\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Devid@example.com\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), (jobs === null || jobs === void 0 ? void 0 : (_jobs$question2 = jobs.question) === null || _jobs$question2 === void 0 ? void 0 : _jobs$question2.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: jobs.question.map((q, index) => {\n          var _uploadStatus$video$i;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 font-semibold\",\n              children: q\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control w-full p-3 border border-gray-300 rounded-md\",\n              name: `answer-${index}`,\n              rows: 3,\n              placeholder: \"Your answer\",\n              value: formData.answers[index] || \"\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-gray-700 font-semibold\",\n                children: \"Upload Video for this Answer (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n                onDrop: acceptedFiles => handleFileChange(acceptedFiles, \"video\", index),\n                children: _ref => {\n                  let {\n                    getRootProps,\n                    getInputProps\n                  } = _ref;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    ...getRootProps(),\n                    className: \"dropzone p-6 border-2 border-dashed rounded-md cursor-pointer\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      ...getInputProps()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-center text-gray-500\",\n                      children: \"Drag & drop your video here, or click to select\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 25\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this), uploadStatus.video[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 text-sm text-gray-500\",\n                children: [\"Selected Video: \", (_uploadStatus$video$i = uploadStatus.video[index]) === null || _uploadStatus$video$i === void 0 ? void 0 : _uploadStatus$video$i.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 font-semibold\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control w-full p-3 border border-gray-300 rounded-md\",\n          name: \"message\",\n          rows: 3,\n          placeholder: \"Message sent to the employer\",\n          value: formData.message,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 font-semibold\",\n          children: \"Upload Resume\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n          onDrop: acceptedFiles => handleFileChange(acceptedFiles, \"resume\"),\n          children: _ref2 => {\n            let {\n              getRootProps,\n              getInputProps\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getRootProps(),\n              className: \"dropzone p-6 border-2 border-dashed rounded-md cursor-pointer\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-center text-gray-500\",\n                children: \"Drag & drop your resume here, or click to select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), uploadStatus.resume && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-500\",\n          children: [\"Selected File: \", uploadStatus.resume]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 37\n        }, this), errors.resume && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-500 text-sm\",\n          children: errors.resume\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700\",\n          children: \"Send Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(SectionApplyJob, \"nTsTxINOPBfBDz0lFclS0kp93rE=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = SectionApplyJob;\nexport default SectionApplyJob;\nvar _c;\n$RefreshReg$(_c, \"SectionApplyJob\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useParams","Dropzone","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionApplyJob","_s","_jobs$question2","jobs","setJobs","formData","setFormData","name","email","message","answers","resume","video","jobId","uploadStatus","setUploadStatus","errors","setErrors","loading","setLoading","userId","get","location","params","URLSearchParams","search","jobIdFromUrl","prev","fetchJobData","response","fetch","ok","data","json","console","error","handleChange","e","value","target","startsWith","index","parseInt","split","newAnswers","handleFileChange","acceptedFiles","type","arguments","length","undefined","file","newVideos","validateForm","newErrors","handleSubmit","_jobs$question","preventDefault","validationErrors","Object","keys","formDataToSend","FormData","append","questionsAndAnswers","question","map","q","answer","JSON","stringify","method","body","credentials","alert","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","_uploadStatus$video$i","rows","onDrop","_ref","getRootProps","getInputProps","_ref2","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-apply-job.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction SectionApplyJob() {\r\n  const [jobs, setJobs] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n    answers: [],\r\n    resume: null,\r\n    video: [],\r\n    jobId: \"\",\r\n  });\r\n  const [uploadStatus, setUploadStatus] = useState({ resume: \"\", video: [] });\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false); // Loading state for job data\r\n\r\n  const userId = Cookies.get(\"candidateId\");\r\n  const location = useLocation();\r\n  const { jobId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const jobIdFromUrl = params.get(\"JobId\");\r\n    if (jobIdFromUrl) {\r\n      setFormData((prev) => ({ ...prev, jobId: jobIdFromUrl }));\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    const fetchJobData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setJobs(data);\r\n        } else {\r\n          console.error(\"Failed to fetch job data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching job data\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (jobId) {\r\n      fetchJobData();\r\n    }\r\n  }, [jobId]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name.startsWith(\"answer-\")) {\r\n      const index = parseInt(name.split(\"-\")[1], 10);\r\n      setFormData((prev) => {\r\n        const newAnswers = [...prev.answers];\r\n        newAnswers[index] = value;\r\n        return { ...prev, answers: newAnswers };\r\n      });\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (acceptedFiles, type, index = null) => {\r\n    const file = acceptedFiles[0];\r\n\r\n    if (index !== null) {\r\n      setFormData((prev) => {\r\n        const newVideos = [...prev.video];\r\n        newVideos[index] = file;\r\n        return { ...prev, video: newVideos };\r\n      });\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [type]: file,\r\n      }));\r\n    }\r\n\r\n    setUploadStatus((prev) => ({\r\n      ...prev,\r\n      [type]: file ? file.name : \"\",\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!formData.name) newErrors.name = \"Name is required.\";\r\n    if (!formData.email) newErrors.email = \"Email is required.\";\r\n    if (!formData.resume) newErrors.resume = \"Resume is required.\";\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"name\", formData.name);\r\n    formDataToSend.append(\"email\", formData.email);\r\n    formDataToSend.append(\"message\", formData.message);\r\n    formDataToSend.append(\"JobId\", jobId);\r\n    formDataToSend.append(\"userId\", userId);\r\n\r\n    const questionsAndAnswers = jobs?.question?.map((q, index) => ({\r\n      question: q,\r\n      answer: formData.answers[index] || \"\",\r\n    }));\r\n\r\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\r\n\r\n    if (formData.resume) formDataToSend.append(\"resume\", formData.resume);\r\n    if (formData.video) formDataToSend.append(\"video\", formData.video);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\r\n        method: \"POST\",\r\n        body: formDataToSend,\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(data.message);\r\n      } else {\r\n        alert(data.error || \"There was an error submitting your application.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"There was an error submitting your application.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6 max-w-xl mx-auto p-4 bg-white rounded-lg shadow-md\">\r\n      {loading ? (\r\n        <div className=\"text-center text-gray-600\">Loading job details...</div>\r\n      ) : (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label className=\"block text-gray-700 font-semibold\">Your Name</label>\r\n            <input\r\n              className=\"form-control w-full p-3 border border-gray-300 rounded-md\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              placeholder=\"Devid Smith\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.name && <span className=\"text-red-500 text-sm\">{errors.name}</span>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"block text-gray-700 font-semibold\">Email Address</label>\r\n            <input\r\n              className=\"form-control w-full p-3 border border-gray-300 rounded-md\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Devid@example.com\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n            />\r\n            {errors.email && <span className=\"text-red-500 text-sm\">{errors.email}</span>}\r\n          </div>\r\n\r\n          {/* Dynamically render job-specific questions */}\r\n          {jobs?.question?.length > 0 && (\r\n            <div className=\"form-group\">\r\n              {jobs.question.map((q, index) => (\r\n                <div key={index}>\r\n                  <label className=\"block text-gray-700 font-semibold\">{q}</label>\r\n                  <textarea\r\n                    className=\"form-control w-full p-3 border border-gray-300 rounded-md\"\r\n                    name={`answer-${index}`}\r\n                    rows={3}\r\n                    placeholder=\"Your answer\"\r\n                    value={formData.answers[index] || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                  <div className=\"mt-3\">\r\n                    <label className=\"block text-gray-700 font-semibold\">Upload Video for this Answer (Optional)</label>\r\n                    <Dropzone onDrop={(acceptedFiles) => handleFileChange(acceptedFiles, \"video\", index)}>\r\n                      {({ getRootProps, getInputProps }) => (\r\n                        <div {...getRootProps()} className=\"dropzone p-6 border-2 border-dashed rounded-md cursor-pointer\">\r\n                          <input {...getInputProps()} />\r\n                          <p className=\"text-center text-gray-500\">Drag & drop your video here, or click to select</p>\r\n                        </div>\r\n                      )}\r\n                    </Dropzone>\r\n                    {uploadStatus.video[index] && (\r\n                      <p className=\"mt-2 text-sm text-gray-500\">Selected Video: {uploadStatus.video[index]?.name}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"block text-gray-700 font-semibold\">Message</label>\r\n            <textarea\r\n              className=\"form-control w-full p-3 border border-gray-300 rounded-md\"\r\n              name=\"message\"\r\n              rows={3}\r\n              placeholder=\"Message sent to the employer\"\r\n              value={formData.message}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          {/* Resume File Upload */}\r\n          <div className=\"form-group\">\r\n            <label className=\"block text-gray-700 font-semibold\">Upload Resume</label>\r\n            <Dropzone onDrop={(acceptedFiles) => handleFileChange(acceptedFiles, \"resume\")}>\r\n              {({ getRootProps, getInputProps }) => (\r\n                <div {...getRootProps()} className=\"dropzone p-6 border-2 border-dashed rounded-md cursor-pointer\">\r\n                  <input {...getInputProps()} />\r\n                  <p className=\"text-center text-gray-500\">Drag & drop your resume here, or click to select</p>\r\n                </div>\r\n              )}\r\n            </Dropzone>\r\n            {uploadStatus.resume && <p className=\"mt-2 text-sm text-gray-500\">Selected File: {uploadStatus.resume}</p>}\r\n            {errors.resume && <span className=\"text-red-500 text-sm\">{errors.resume}</span>}\r\n          </div>\r\n\r\n          <div>\r\n            <button type=\"submit\" className=\"w-full bg-blue-600 text-white p-3 rounded-md hover:bg-blue-700\">\r\n              Send Application\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SectionApplyJob;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}