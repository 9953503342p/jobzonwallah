{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-apply-job.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { NavLink, useLocation, useParams } from \"react-router-dom\";\nimport { publicUser } from \"../../../../../globals/route-names\";\nimport DropzoneComponent from \"react-dropzone-component\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionApplyJob() {\n  _s();\n  const [jobs, setJobs] = useState({});\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    answers: [],\n    videoAnswers: [],\n    resume: null,\n    jobId: \"\"\n  });\n  const userId = Cookies.get(\"candidateId\");\n  const location = useLocation();\n  const {\n    jobId\n  } = useParams();\n\n  // Update jobId if passed in the URL query\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const jobIdFromUrl = params.get(\"JobId\");\n    if (jobIdFromUrl) {\n      setFormData(prev => ({\n        ...prev,\n        jobId: jobIdFromUrl\n      }));\n    }\n  }, [location]);\n  console.log(formData);\n\n  // Fetch job data from the backend\n  useEffect(() => {\n    const fetchJobData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJobs(data);\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      }\n    };\n    if (jobId) {\n      fetchJobData();\n    }\n  }, [jobId]);\n  console.log(formData.videoAnswers);\n\n  // Handle form input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith(\"answer-\")) {\n      const index = parseInt(name.split(\"-\")[1], 10);\n      setFormData(prev => {\n        const newAnswers = [...prev.answers];\n        newAnswers[index] = value;\n        return {\n          ...prev,\n          answers: newAnswers\n        };\n      });\n    } else if (name.startsWith(\"videoanswer-\")) {\n      const index = parseInt(name.split(\"-\")[1], 10);\n      const videoFile = e.target.files[0];\n      console.log(`Index: ${index}, File:`, videoFile);\n      setFormData(prev => {\n        const newVideoAnswers = [...prev.videoAnswers];\n        newVideoAnswers[index] = videoFile;\n        return {\n          ...prev,\n          videoAnswers: newVideoAnswers\n        };\n      });\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // Handle file change for resume\n  const handleFileChange = file => {\n    setFormData(prev => ({\n      ...prev,\n      resume: file\n    }));\n  };\n\n  // Submit the form data\n  const handleSubmit = async e => {\n    var _jobs$question;\n    e.preventDefault();\n    const formDataToSend = new FormData();\n    formDataToSend.append(\"name\", formData.name);\n    formDataToSend.append(\"email\", formData.email);\n    formDataToSend.append(\"message\", formData.message);\n    formDataToSend.append(\"JobId\", jobId);\n    formDataToSend.append(\"userId\", userId);\n    const questionsAndAnswers = jobs === null || jobs === void 0 ? void 0 : (_jobs$question = jobs.question) === null || _jobs$question === void 0 ? void 0 : _jobs$question.map((q, index) => ({\n      question: q,\n      answer: formData.answers[index] || \"\",\n      video: formData.videoAnswers[index] || null // Ensure this includes the file object\n    }));\n\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\n\n    // Append video files separately, if required\n    formData.videoAnswers.forEach((file, index) => {\n      if (file) {\n        formDataToSend.append(`videoAnswers[${index}]`, file);\n      }\n    });\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\n\n    // Append resume file if available\n    if (formData.resume) {\n      formDataToSend.append(\"resume\", formData.resume);\n    }\n\n    // Send the application to the backend\n    try {\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\n        method: \"POST\",\n        body: formDataToSend,\n        credentials: \"include\"\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n        console.log(data.message);\n      } else {\n        alert(data.error || \"There was an error submitting your application.\");\n        console.log(data.error || \"There was an error submitting your application.\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"There was an error submitting your application.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twm-tabs-style-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ls-inputicon-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                name: \"name\",\n                type: \"text\",\n                placeholder: \"Devid Smith\",\n                value: formData.name,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fs-input-icon fa fa-user\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ls-inputicon-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                name: \"email\",\n                type: \"email\",\n                placeholder: \"Devid@example.com\",\n                value: formData.email,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fs-input-icon fas fa-at\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), (jobs === null || jobs === void 0 ? void 0 : jobs.question) && jobs.question.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: jobs.question.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: q\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              name: `answer-${index}`,\n              rows: 3,\n              placeholder: \"Your answer\",\n              value: formData.answers[index] || \"\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Upload Video Answer (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: `videoAnswers-${index}`,\n                accept: \"video/*\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 5\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 3\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              name: \"message\",\n              rows: 3,\n              placeholder: \"Message sent to the employer\",\n              value: formData.message,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropzoneComponent, {\n              config: {\n                postUrl: \"/apply-job\"\n              },\n              eventHandlers: {\n                addedfile: file => handleFileChange(file)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"If you do not have a resume document, you may write your brief professional profile\", \" \", /*#__PURE__*/_jsxDEV(NavLink, {\n                to: publicUser.pages.CONTACT,\n                className: \"site-text-primary\",\n                children: \"here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"site-button\",\n              children: \"Send Application\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(SectionApplyJob, \"W1PmqOuZou7k8GfVYlWuE5DPno8=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = SectionApplyJob;\nexport default SectionApplyJob;\nvar _c;\n$RefreshReg$(_c, \"SectionApplyJob\");","map":{"version":3,"names":["React","useState","useEffect","NavLink","useLocation","useParams","publicUser","DropzoneComponent","Cookies","jsxDEV","_jsxDEV","SectionApplyJob","_s","jobs","setJobs","formData","setFormData","name","email","message","answers","videoAnswers","resume","jobId","userId","get","location","params","URLSearchParams","search","jobIdFromUrl","prev","console","log","fetchJobData","response","fetch","ok","data","json","error","handleChange","e","value","target","startsWith","index","parseInt","split","newAnswers","videoFile","files","newVideoAnswers","handleFileChange","file","handleSubmit","_jobs$question","preventDefault","formDataToSend","FormData","append","questionsAndAnswers","question","map","q","answer","video","JSON","stringify","forEach","method","body","credentials","alert","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","length","rows","accept","config","postUrl","eventHandlers","addedfile","to","pages","CONTACT","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-apply-job.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, useLocation, useParams } from \"react-router-dom\";\r\nimport { publicUser } from \"../../../../../globals/route-names\";\r\nimport DropzoneComponent from \"react-dropzone-component\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction SectionApplyJob() {\r\n  const [jobs, setJobs] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n    answers: [],\r\n    videoAnswers: [],\r\n    resume: null,\r\n    jobId: \"\",\r\n  });\r\n\r\n  const userId = Cookies.get(\"candidateId\");\r\n  const location = useLocation();\r\n  const { jobId } = useParams();\r\n\r\n  // Update jobId if passed in the URL query\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const jobIdFromUrl = params.get(\"JobId\");\r\n    if (jobIdFromUrl) {\r\n      setFormData((prev) => ({ ...prev, jobId: jobIdFromUrl }));\r\n    }\r\n  }, [location]);\r\n  console.log(formData)\r\n\r\n  // Fetch job data from the backend\r\n  useEffect(() => {\r\n    const fetchJobData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setJobs(data);\r\n        } else {\r\n          console.error(\"Failed to fetch job data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching job data\", error);\r\n      }\r\n    };\r\n\r\n    if (jobId) {\r\n      fetchJobData();\r\n    }\r\n  }, [jobId]);\r\n  console.log(formData.videoAnswers)\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name.startsWith(\"answer-\")) {\r\n      const index = parseInt(name.split(\"-\")[1], 10);\r\n      setFormData((prev) => {\r\n        const newAnswers = [...prev.answers];\r\n        newAnswers[index] = value;\r\n        return { ...prev, answers: newAnswers };\r\n      });\r\n    } else if (name.startsWith(\"videoanswer-\")) {\r\n      const index = parseInt(name.split(\"-\")[1], 10);\r\n      const videoFile = e.target.files[0];\r\n      console.log(`Index: ${index}, File:`, videoFile);\r\n      setFormData((prev) => {\r\n        const newVideoAnswers = [...prev.videoAnswers];\r\n        newVideoAnswers[index] = videoFile;\r\n        return { ...prev, videoAnswers: newVideoAnswers };\r\n      });\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle file change for resume\r\n  const handleFileChange = (file) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      resume: file,\r\n    }));\r\n  };\r\n\r\n  // Submit the form data\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"name\", formData.name);\r\n    formDataToSend.append(\"email\", formData.email);\r\n    formDataToSend.append(\"message\", formData.message);\r\n    formDataToSend.append(\"JobId\", jobId);\r\n    formDataToSend.append(\"userId\", userId);\r\n\r\n    const questionsAndAnswers = jobs?.question?.map((q, index) => ({\r\n      question: q,\r\n      answer: formData.answers[index] || \"\",\r\n      video: formData.videoAnswers[index] || null, // Ensure this includes the file object\r\n    }));\r\n    \r\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\r\n    \r\n    // Append video files separately, if required\r\n    formData.videoAnswers.forEach((file, index) => {\r\n      if (file) {\r\n        formDataToSend.append(`videoAnswers[${index}]`, file);\r\n      }\r\n    });\r\n    \r\n\r\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\r\n\r\n    // Append resume file if available\r\n    if (formData.resume) {\r\n      formDataToSend.append(\"resume\", formData.resume);\r\n    }\r\n\r\n    // Send the application to the backend\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\r\n        method: \"POST\",\r\n        body: formDataToSend,\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(data.message);\r\n        console.log(data.message);\r\n      } else {\r\n        alert(data.error || \"There was an error submitting your application.\");\r\n        console.log(data.error || \"There was an error submitting your application.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"There was an error submitting your application.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"twm-tabs-style-1\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Your Name</label>\r\n              <div className=\"ls-inputicon-box\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  placeholder=\"Devid Smith\"\r\n                  value={formData.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <i className=\"fs-input-icon fa fa-user\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Email Address</label>\r\n              <div className=\"ls-inputicon-box\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Devid@example.com\"\r\n                  value={formData.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <i className=\"fs-input-icon fas fa-at\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {jobs?.question && jobs.question.length > 0 && (\r\n            <div className=\"col-md-12\">\r\n         {jobs.question.map((q, index) => (\r\n  <div key={index} className=\"form-group\">\r\n    <label>{q}</label>\r\n    <textarea\r\n      className=\"form-control\"\r\n      name={`answer-${index}`}\r\n      rows={3}\r\n      placeholder=\"Your answer\"\r\n      value={formData.answers[index] || \"\"}\r\n      onChange={handleChange}\r\n    />\r\n    <div className=\"form-group\">\r\n      <label>Upload Video Answer (Optional)</label>\r\n      <input\r\n        type=\"file\"\r\n        name={`videoAnswers-${index}`}\r\n        accept=\"video/*\"\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  </div>\r\n))}\r\n\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Message</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"message\"\r\n                rows={3}\r\n                placeholder=\"Message sent to the employer\"\r\n                value={formData.message}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Upload Resume</label>\r\n              <DropzoneComponent\r\n                config={{\r\n                  postUrl: \"/apply-job\",\r\n                }}\r\n                eventHandlers={{\r\n                  addedfile: (file) => handleFileChange(file),\r\n                }}\r\n              />\r\n              <small>\r\n                If you do not have a resume document, you may write your brief professional profile{\" \"}\r\n                <NavLink to={publicUser.pages.CONTACT} className=\"site-text-primary\">\r\n                  here\r\n                </NavLink>\r\n              </small>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <div className=\"text-left\">\r\n              <button type=\"submit\" className=\"site-button\">\r\n                Send Application\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SectionApplyJob;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}