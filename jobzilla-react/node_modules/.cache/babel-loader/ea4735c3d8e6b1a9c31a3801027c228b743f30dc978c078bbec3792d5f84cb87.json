{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-jobs-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport JobZImage from \"../../../../common/jobz-img\";\nimport { NavLink } from \"react-router-dom\";\nimport SectionPagination from \"../common/section-pagination\";\nimport { publicUser } from \"../../../../../globals/route-names\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionJobsGrid() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [jobsPerPage] = useState(6); // Adjust the number of jobs per page\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/post-job\").then(response => response.json()).then(data => setJobs(data)).catch(error => console.error(\"Error fetching jobs:\", error));\n  }, []);\n\n  // Get the current jobs for the current page\n  const indexOfLastJob = currentPage * jobsPerPage;\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n\n  // Handle the pagination\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6 col-md-12 m-b30\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twm-jobs-grid-style1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-media\",\n            children: /*#__PURE__*/_jsxDEV(JobZImage, {\n              src: job.companyImage,\n              alt: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"twm-job-post-duration\",\n            children: [getDateDifference(job.postDate), \" days ago\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-jobs-category green\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"twm-bg-green\",\n              children: job.jobType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-mid-content\",\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: publicUser.jobs.DETAIL1,\n              className: \"twm-job-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: job.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"twm-job-address\",\n              children: job.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: job.companyWebsite,\n              className: \"twm-job-websites site-text-primary\",\n              children: job.companyWebsite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"twm-right-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twm-jobs-amount\",\n              children: [job.salary, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"/ Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n              to: publicUser.jobs.DETAIL1,\n              className: \"twm-jobs-browse site-text-primary\",\n              children: \"Browse Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionPagination, {\n      totalItems: jobs.length,\n      perPage: jobsPerPage,\n      currentPage: currentPage,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionJobsGrid, \"l1zCCKDrheL9y6E6CyqUGbqjwF0=\");\n_c = SectionJobsGrid;\nfunction getDateDifference(startDate) {\n  const now = new Date();\n  const start = new Date(startDate);\n  const diffTime = now - start;\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  return diffDays;\n}\nexport default SectionJobsGrid;\nvar _c;\n$RefreshReg$(_c, \"SectionJobsGrid\");","map":{"version":3,"names":["React","useEffect","useState","JobZImage","NavLink","SectionPagination","publicUser","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionJobsGrid","_s","jobs","setJobs","currentPage","setCurrentPage","jobsPerPage","fetch","then","response","json","data","catch","error","console","indexOfLastJob","indexOfFirstJob","currentJobs","slice","paginate","pageNumber","children","className","map","job","src","companyImage","alt","fileName","_jsxFileName","lineNumber","columnNumber","getDateDifference","postDate","jobType","to","DETAIL1","title","address","href","companyWebsite","salary","id","totalItems","length","perPage","_c","startDate","now","Date","start","diffTime","diffDays","Math","floor","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-jobs-grid.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport JobZImage from \"../../../../common/jobz-img\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport SectionPagination from \"../common/section-pagination\";\r\nimport { publicUser } from \"../../../../../globals/route-names\";\r\n\r\nfunction SectionJobsGrid() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [jobsPerPage] = useState(6);  // Adjust the number of jobs per page\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/post-job\")\r\n      .then((response) => response.json())\r\n      .then((data) => setJobs(data))\r\n      .catch((error) => console.error(\"Error fetching jobs:\", error));\r\n  }, []);\r\n\r\n  // Get the current jobs for the current page\r\n  const indexOfLastJob = currentPage * jobsPerPage;\r\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\r\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\r\n\r\n  // Handle the pagination\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        {/* Display Jobs */}\r\n        {currentJobs.map((job) => (\r\n          <div key={job.id} className=\"col-lg-6 col-md-12 m-b30\">\r\n            <div className=\"twm-jobs-grid-style1\">\r\n              <div className=\"twm-media\">\r\n                <JobZImage src={job.companyImage} alt=\"#\" />\r\n              </div>\r\n              <span className=\"twm-job-post-duration\">\r\n                {getDateDifference(job.postDate)} days ago\r\n              </span>\r\n              <div className=\"twm-jobs-category green\">\r\n                <span className=\"twm-bg-green\">{job.jobType}</span>\r\n              </div>\r\n              <div className=\"twm-mid-content\">\r\n                <NavLink to={publicUser.jobs.DETAIL1} className=\"twm-job-title\">\r\n                  <h4>{job.title}</h4>\r\n                </NavLink>\r\n                <p className=\"twm-job-address\">{job.address}</p>\r\n                <a\r\n                  href={job.companyWebsite}\r\n                  className=\"twm-job-websites site-text-primary\"\r\n                >\r\n                  {job.companyWebsite}\r\n                </a>\r\n              </div>\r\n              <div className=\"twm-right-content\">\r\n                <div className=\"twm-jobs-amount\">\r\n                  {job.salary} <span>/ Month</span>\r\n                </div>\r\n                <NavLink\r\n                  to={publicUser.jobs.DETAIL1}\r\n                  className=\"twm-jobs-browse site-text-primary\"\r\n                >\r\n                  Browse Job\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      <SectionPagination\r\n        totalItems={jobs.length}\r\n        perPage={jobsPerPage}\r\n        currentPage={currentPage}\r\n        paginate={paginate}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction getDateDifference(startDate) {\r\n  const now = new Date();\r\n  const start = new Date(startDate);\r\n  const diffTime = now - start;\r\n  const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n  return diffDays;\r\n}\r\n\r\nexport default SectionJobsGrid;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}