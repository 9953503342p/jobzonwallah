{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\candidate\\\\sections\\\\resume\\\\section-can-attachment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionCanAttachment() {\n  _s();\n  const [message, setMessage] = useState(''); // State to store the success or error message\n  const [messageType, setMessageType] = useState(''); // State to store the message type (success or error)\n\n  // Configure the dropzone component to upload to the correct API endpoint\n  const onDrop = acceptedFiles => {\n    // Create a new FormData instance\n    const formData = new FormData();\n\n    // Append the file to FormData (for a single file upload)\n    acceptedFiles.forEach(file => {\n      formData.append('resumefile', file); // Append file directly (not the file path)\n      console.log(file); // Check the file data\n    });\n\n    // Make the API request to upload the file\n    fetch('http://localhost:8080/upload-resume', {\n      method: 'POST',\n      body: formData,\n      credentials: 'include' // If you're sending cookies like candidateId\n    }).then(response => response.json()).then(data => {\n      console.log('File uploaded successfully:', data);\n      // Set success message\n      setMessage('File uploaded successfully!');\n      setMessageType('success');\n    }).catch(error => {\n      console.error('Error uploading file:', error);\n      // Set error message\n      setMessage('Error uploading file. Please try again.');\n      setMessageType('error');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-heading wt-panel-heading p-a20 panel-heading-with-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"panel-tittle m-a0\",\n        children: \"Attach Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-body wt-panel-body p-a20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twm-panel-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Resume is the most important document recruiters look for. Recruiters generally do not look at profiles without resumes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-cover-pic\",\n          children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${messageType}`,\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n            onDrop: onDrop,\n            accept: \".pdf,.doc,.docx,.txt\",\n            maxFiles: 1,\n            children: _ref => {\n              let {\n                getRootProps,\n                getInputProps\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                ...getRootProps(),\n                className: \"dropzone\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Drag & drop a resume here, or click to select a file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionCanAttachment, \"tG/j8D5lQqJpsjm3In2Ghdcvf+s=\");\n_c = SectionCanAttachment;\nexport default SectionCanAttachment;\nvar _c;\n$RefreshReg$(_c, \"SectionCanAttachment\");","map":{"version":3,"names":["React","useState","Dropzone","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionCanAttachment","_s","message","setMessage","messageType","setMessageType","onDrop","acceptedFiles","formData","FormData","forEach","file","append","console","log","fetch","method","body","credentials","then","response","json","data","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","accept","maxFiles","_ref","getRootProps","getInputProps","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/candidate/sections/resume/section-can-attachment.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\n\nfunction SectionCanAttachment() {\n    const [message, setMessage] = useState('');  // State to store the success or error message\n    const [messageType, setMessageType] = useState('');  // State to store the message type (success or error)\n\n    // Configure the dropzone component to upload to the correct API endpoint\n    const onDrop = (acceptedFiles) => {\n        // Create a new FormData instance\n        const formData = new FormData();\n    \n        // Append the file to FormData (for a single file upload)\n        acceptedFiles.forEach((file) => {\n            formData.append('resumefile', file); // Append file directly (not the file path)\n            console.log(file); // Check the file data\n        });\n    \n        // Make the API request to upload the file\n        fetch('http://localhost:8080/upload-resume', {\n            method: 'POST',\n            body: formData,\n            credentials: 'include', // If you're sending cookies like candidateId\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            console.log('File uploaded successfully:', data);\n            // Set success message\n            setMessage('File uploaded successfully!');\n            setMessageType('success');\n        })\n        .catch((error) => {\n            console.error('Error uploading file:', error);\n            // Set error message\n            setMessage('Error uploading file. Please try again.');\n            setMessageType('error');\n        });\n    };\n\n    return (\n        <>\n            <div className=\"panel-heading wt-panel-heading p-a20 panel-heading-with-btn\">\n                <h4 className=\"panel-tittle m-a0\">Attach Resume</h4>\n            </div>\n            <div className=\"panel-body wt-panel-body p-a20\">\n                <div className=\"twm-panel-inner\">\n                    <p>Resume is the most important document recruiters look for. Recruiters generally do not look at profiles without resumes.</p>\n                    <div className=\"dashboard-cover-pic\">\n                        {/* Display the message */}\n                        {message && (\n                            <div className={`message ${messageType}`}>\n                                {message}\n                            </div>\n                        )}\n                        {/* Dropzone for file upload */}\n                        <Dropzone\n                            onDrop={onDrop}\n                            accept=\".pdf,.doc,.docx,.txt\"\n                            maxFiles={1}\n                        >\n                            {({ getRootProps, getInputProps }) => (\n                                <div {...getRootProps()} className=\"dropzone\">\n                                    <input {...getInputProps()} />\n                                    <p>Drag & drop a resume here, or click to select a file</p>\n                                </div>\n                            )}\n                        </Dropzone>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SectionCanAttachment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}