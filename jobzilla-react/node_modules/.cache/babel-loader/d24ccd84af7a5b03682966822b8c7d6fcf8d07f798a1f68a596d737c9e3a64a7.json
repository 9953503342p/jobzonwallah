{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-apply-job.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { publicUser } from \"../../../../../globals/route-names\";\nimport Dropzone from \"react-dropzone\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionApplyJob() {\n  _s();\n  var _jobs$question2;\n  const [jobs, setJobs] = useState({});\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    answers: [],\n    resume: null,\n    jobId: \"\",\n    videoAnswers: [] // Array to store multiple video answers\n  });\n\n  const [uploadStatus, setUploadStatus] = useState({\n    resume: \"\",\n    videoAnswers: [] // Track upload status for multiple video answers\n  });\n\n  const [loading, setLoading] = useState(false);\n  const userId = Cookies.get(\"candidateId\");\n  const location = useLocation();\n  const {\n    jobId\n  } = useParams();\n\n  // Fetch job data on initial load or when jobId changes\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const jobIdFromUrl = params.get(\"JobId\");\n    if (jobIdFromUrl) {\n      setFormData(prev => ({\n        ...prev,\n        jobId: jobIdFromUrl\n      }));\n    }\n  }, [location]);\n\n  // Fetch job details when jobId is available\n  useEffect(() => {\n    const fetchJobData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJobs(data);\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      }\n    };\n    if (jobId) {\n      fetchJobData();\n    }\n  }, [jobId]);\n\n  // Handle form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith(\"answer-\")) {\n      const index = parseInt(name.split(\"-\")[1], 10);\n      setFormData(prev => {\n        const newAnswers = [...prev.answers];\n        newAnswers[index] = value;\n        return {\n          ...prev,\n          answers: newAnswers\n        };\n      });\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // Handle file selection for resume or video answers\n  const handleFileChange = function (acceptedFiles, type) {\n    let index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const file = acceptedFiles[0];\n\n    // Validate video file type\n    if (type === \"videoAnswer\" && file && file.type !== \"video/mp4\") {\n      alert(\"Only .mp4 files are allowed for video answers.\");\n      return;\n    }\n    if (type === \"videoAnswer\") {\n      const updatedVideos = [...formData.videoAnswers];\n      if (index !== null) {\n        updatedVideos[index] = file; // Update the specific video in the array\n      } else {\n        updatedVideos.push(file); // Add new video to the array\n      }\n\n      setFormData(prev => ({\n        ...prev,\n        videoAnswers: updatedVideos\n      }));\n      const updatedStatus = [...uploadStatus.videoAnswers];\n      updatedStatus[index] = file ? file.name : \"\"; // Show the file name for each video\n      setUploadStatus(prev => ({\n        ...prev,\n        videoAnswers: updatedStatus\n      }));\n    }\n    if (type === \"resume\") {\n      setFormData(prev => ({\n        ...prev,\n        resume: file\n      }));\n      setUploadStatus(prev => ({\n        ...prev,\n        resume: file ? file.name : \"\"\n      }));\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    var _jobs$question;\n    e.preventDefault();\n    setLoading(true);\n    const formDataToSend = new FormData();\n    formDataToSend.append(\"name\", formData.name);\n    formDataToSend.append(\"email\", formData.email);\n    formDataToSend.append(\"message\", formData.message);\n    formDataToSend.append(\"JobId\", jobId);\n    formDataToSend.append(\"userId\", userId);\n    const questionsAndAnswers = jobs === null || jobs === void 0 ? void 0 : (_jobs$question = jobs.question) === null || _jobs$question === void 0 ? void 0 : _jobs$question.map((q, index) => ({\n      question: q,\n      answer: formData.answers[index] || \"\"\n    }));\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\n    if (formData.resume) formDataToSend.append(\"resume\", formData.resume);\n\n    // Append video answers as an array of files\n    formData.videoAnswers.forEach((videoFile, index) => {\n      formDataToSend.append(`videoAnswer-${index}`, videoFile);\n    });\n    try {\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\n        method: \"POST\",\n        body: formDataToSend,\n        credentials: \"include\"\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(data.message);\n        setFormData({\n          name: \"\",\n          email: \"\",\n          message: \"\",\n          answers: [],\n          resume: null,\n          jobId: \"\",\n          videoAnswers: [] // Reset video answers array after submission\n        });\n      } else {\n        alert(data.error || \"There was an error submitting your application.\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"There was an error submitting your application.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twm-tabs-style-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Your Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              name: \"name\",\n              type: \"text\",\n              placeholder: \"Devid Smith\",\n              value: formData.name,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              name: \"email\",\n              type: \"email\",\n              placeholder: \"Devid@example.com\",\n              value: formData.email,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), (jobs === null || jobs === void 0 ? void 0 : (_jobs$question2 = jobs.question) === null || _jobs$question2 === void 0 ? void 0 : _jobs$question2.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: jobs.question.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: q\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              name: `answer-${index}`,\n              rows: 3,\n              placeholder: \"Your answer\",\n              value: formData.answers[index] || \"\",\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Upload Video Answer \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n              onDrop: acceptedFiles => handleFileChange(acceptedFiles, \"videoAnswer\", index),\n              children: _ref => {\n                let {\n                  getRootProps,\n                  getInputProps\n                } = _ref;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ...getRootProps(),\n                  className: \"dropzone\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    ...getInputProps()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Drag & drop your video answer here, or click to select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), uploadStatus.videoAnswers[index] && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Selected Video: \", uploadStatus.videoAnswers[index]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              name: \"message\",\n              rows: 3,\n              placeholder: \"Message sent to the employer\",\n              value: formData.message,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Upload Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n              onDrop: acceptedFiles => handleFileChange(acceptedFiles, \"resume\"),\n              children: _ref2 => {\n                let {\n                  getRootProps,\n                  getInputProps\n                } = _ref2;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  ...getRootProps(),\n                  className: \"dropzone\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    ...getInputProps()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Drag & drop your resume here, or click to select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), uploadStatus.resume && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Selected File: \", uploadStatus.resume]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-xl-12 col-lg-12 col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"site-button\",\n            disabled: loading,\n            children: loading ? \"Submitting...\" : \"Send Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(SectionApplyJob, \"xtd+hmRV2R8/JMbYncfiS9Bfp7g=\", false, function () {\n  return [useLocation, useParams];\n});\n_c = SectionApplyJob;\nexport default SectionApplyJob;\nvar _c;\n$RefreshReg$(_c, \"SectionApplyJob\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useParams","publicUser","Dropzone","Cookies","jsxDEV","_jsxDEV","SectionApplyJob","_s","_jobs$question2","jobs","setJobs","formData","setFormData","name","email","message","answers","resume","jobId","videoAnswers","uploadStatus","setUploadStatus","loading","setLoading","userId","get","location","params","URLSearchParams","search","jobIdFromUrl","prev","fetchJobData","response","fetch","ok","data","json","console","error","handleChange","e","value","target","startsWith","index","parseInt","split","newAnswers","handleFileChange","acceptedFiles","type","arguments","length","undefined","file","alert","updatedVideos","push","updatedStatus","handleSubmit","_jobs$question","preventDefault","formDataToSend","FormData","append","questionsAndAnswers","question","map","q","answer","JSON","stringify","forEach","videoFile","method","body","credentials","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","rows","onDrop","_ref","getRootProps","getInputProps","_ref2","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-apply-job.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { publicUser } from \"../../../../../globals/route-names\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nfunction SectionApplyJob() {\r\n  const [jobs, setJobs] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n    answers: [],\r\n    resume: null,\r\n    jobId: \"\",\r\n    videoAnswers: [], // Array to store multiple video answers\r\n  });\r\n  const [uploadStatus, setUploadStatus] = useState({\r\n    resume: \"\",\r\n    videoAnswers: [], // Track upload status for multiple video answers\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const userId = Cookies.get(\"candidateId\");\r\n  const location = useLocation();\r\n  const { jobId } = useParams();\r\n\r\n  // Fetch job data on initial load or when jobId changes\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const jobIdFromUrl = params.get(\"JobId\");\r\n    if (jobIdFromUrl) {\r\n      setFormData((prev) => ({ ...prev, jobId: jobIdFromUrl }));\r\n    }\r\n  }, [location]);\r\n\r\n  // Fetch job details when jobId is available\r\n  useEffect(() => {\r\n    const fetchJobData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setJobs(data);\r\n        } else {\r\n          console.error(\"Failed to fetch job data\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching job data\", error);\r\n      }\r\n    };\r\n\r\n    if (jobId) {\r\n      fetchJobData();\r\n    }\r\n  }, [jobId]);\r\n\r\n  // Handle form field changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name.startsWith(\"answer-\")) {\r\n      const index = parseInt(name.split(\"-\")[1], 10);\r\n      setFormData((prev) => {\r\n        const newAnswers = [...prev.answers];\r\n        newAnswers[index] = value;\r\n        return { ...prev, answers: newAnswers };\r\n      });\r\n    } else {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle file selection for resume or video answers\r\n  const handleFileChange = (acceptedFiles, type, index = null) => {\r\n    const file = acceptedFiles[0];\r\n\r\n    // Validate video file type\r\n    if (type === \"videoAnswer\" && file && file.type !== \"video/mp4\") {\r\n      alert(\"Only .mp4 files are allowed for video answers.\");\r\n      return;\r\n    }\r\n\r\n    if (type === \"videoAnswer\") {\r\n      const updatedVideos = [...formData.videoAnswers];\r\n      if (index !== null) {\r\n        updatedVideos[index] = file; // Update the specific video in the array\r\n      } else {\r\n        updatedVideos.push(file); // Add new video to the array\r\n      }\r\n\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        videoAnswers: updatedVideos,\r\n      }));\r\n\r\n      const updatedStatus = [...uploadStatus.videoAnswers];\r\n      updatedStatus[index] = file ? file.name : \"\"; // Show the file name for each video\r\n      setUploadStatus((prev) => ({\r\n        ...prev,\r\n        videoAnswers: updatedStatus,\r\n      }));\r\n    }\r\n\r\n    if (type === \"resume\") {\r\n      setFormData((prev) => ({\r\n        ...prev,\r\n        resume: file,\r\n      }));\r\n      setUploadStatus((prev) => ({\r\n        ...prev,\r\n        resume: file ? file.name : \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const formDataToSend = new FormData();\r\n    formDataToSend.append(\"name\", formData.name);\r\n    formDataToSend.append(\"email\", formData.email);\r\n    formDataToSend.append(\"message\", formData.message);\r\n    formDataToSend.append(\"JobId\", jobId);\r\n    formDataToSend.append(\"userId\", userId);\r\n\r\n    const questionsAndAnswers = jobs?.question?.map((q, index) => ({\r\n      question: q,\r\n      answer: formData.answers[index] || \"\",\r\n    }));\r\n\r\n    formDataToSend.append(\"questionsAndAnswers\", JSON.stringify(questionsAndAnswers));\r\n\r\n    if (formData.resume) formDataToSend.append(\"resume\", formData.resume);\r\n\r\n    // Append video answers as an array of files\r\n    formData.videoAnswers.forEach((videoFile, index) => {\r\n      formDataToSend.append(`videoAnswer-${index}`, videoFile);\r\n    });\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/apply-job\", {\r\n        method: \"POST\",\r\n        body: formDataToSend,\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        alert(data.message);\r\n        setFormData({\r\n          name: \"\",\r\n          email: \"\",\r\n          message: \"\",\r\n          answers: [],\r\n          resume: null,\r\n          jobId: \"\",\r\n          videoAnswers: [], // Reset video answers array after submission\r\n        });\r\n      } else {\r\n        alert(data.error || \"There was an error submitting your application.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"There was an error submitting your application.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"twm-tabs-style-1\">\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Your Name</label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Devid Smith\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Email Address</label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Devid@example.com\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dynamically render job-specific questions */}\r\n          {jobs?.question?.length > 0 && (\r\n            <div className=\"col-md-12\">\r\n              {jobs.question.map((q, index) => (\r\n                <div key={index} className=\"form-group\">\r\n                  <label>{q}</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    name={`answer-${index}`}\r\n                    rows={3}\r\n                    placeholder=\"Your answer\"\r\n                    value={formData.answers[index] || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                  {/* Video upload for each question */}\r\n                  <label>Upload Video Answer {index + 1}</label>\r\n                  <Dropzone\r\n                    onDrop={(acceptedFiles) => handleFileChange(acceptedFiles, \"videoAnswer\", index)}\r\n                  >\r\n                    {({ getRootProps, getInputProps }) => (\r\n                      <div {...getRootProps()} className=\"dropzone\">\r\n                        <input {...getInputProps()} />\r\n                        <p>Drag & drop your video answer here, or click to select</p>\r\n                      </div>\r\n                    )}\r\n                  </Dropzone>\r\n                  {uploadStatus.videoAnswers[index] && (\r\n                    <p>Selected Video: {uploadStatus.videoAnswers[index]}</p>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Message</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                name=\"message\"\r\n                rows={3}\r\n                placeholder=\"Message sent to the employer\"\r\n                value={formData.message}\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Resume File Upload */}\r\n          <div className=\"col-lg-12 col-md-12\">\r\n            <div className=\"form-group\">\r\n              <label>Upload Resume</label>\r\n              <Dropzone onDrop={(acceptedFiles) => handleFileChange(acceptedFiles, \"resume\")}>\r\n                {({ getRootProps, getInputProps }) => (\r\n                  <div {...getRootProps()} className=\"dropzone\">\r\n                    <input {...getInputProps()} />\r\n                    <p>Drag & drop your resume here, or click to select</p>\r\n                  </div>\r\n                )}\r\n              </Dropzone>\r\n              {uploadStatus.resume && <p>Selected File: {uploadStatus.resume}</p>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n            <button type=\"submit\" className=\"site-button\" disabled={loading}>\r\n              {loading ? \"Submitting...\" : \"Send Application\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SectionApplyJob;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}