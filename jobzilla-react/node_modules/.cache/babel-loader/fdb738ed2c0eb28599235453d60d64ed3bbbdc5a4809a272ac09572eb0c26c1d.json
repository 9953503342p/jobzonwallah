{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\candidate\\\\sections\\\\resume\\\\section-can-attachment.jsx\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionCanAttachment() {\n  // Configure the dropzone component to upload to the correct API endpoint\n  const onDrop = acceptedFiles => {\n    // Create a new FormData instance\n    const formData = new FormData();\n\n    // Append each file to FormData (if you're expecting multiple files)\n    acceptedFiles.forEach(file => {\n      formData.append('resumefile', file);\n      console.log('resumefile', file); // Append the file object, not the path\n    });\n\n    // Make the API request to upload the file\n    fetch('http://localhost:8080/upload-resume', {\n      method: 'POST',\n      body: formData,\n      credentials: 'include' // If you're sending cookies like candidateId\n    }).then(response => response.json()).then(data => {\n      console.log('File uploaded successfully:', data);\n    }).catch(error => {\n      console.error('Error uploading file:', error);\n    });\n\n    // Log FormData contents\n    for (let pair of formData.entries()) {\n      console.log(pair[0], pair[1]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-heading wt-panel-heading p-a20 panel-heading-with-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"panel-tittle m-a0\",\n        children: \"Attach Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-body wt-panel-body p-a20\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twm-panel-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Resume is the most important document recruiters look for. Recruiters generally do not look at profiles without resumes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-cover-pic\",\n          children: /*#__PURE__*/_jsxDEV(Dropzone, {\n            onDrop: onDrop,\n            accept: \".pdf,.doc,.docx,.txt\",\n            maxFiles: 1,\n            children: _ref => {\n              let {\n                getRootProps,\n                getInputProps\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                ...getRootProps(),\n                className: \"dropzone\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Drag & drop a resume here, or click to select a file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 33\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = SectionCanAttachment;\nexport default SectionCanAttachment;\nvar _c;\n$RefreshReg$(_c, \"SectionCanAttachment\");","map":{"version":3,"names":["React","Dropzone","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionCanAttachment","onDrop","acceptedFiles","formData","FormData","forEach","file","append","console","log","fetch","method","body","credentials","then","response","json","data","catch","error","pair","entries","children","className","fileName","_jsxFileName","lineNumber","columnNumber","accept","maxFiles","_ref","getRootProps","getInputProps","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/candidate/sections/resume/section-can-attachment.jsx"],"sourcesContent":["import React from 'react';\nimport Dropzone from 'react-dropzone';\n\nfunction SectionCanAttachment() {\n    // Configure the dropzone component to upload to the correct API endpoint\n    const onDrop = (acceptedFiles) => {\n        // Create a new FormData instance\n        const formData = new FormData();\n        \n        // Append each file to FormData (if you're expecting multiple files)\n        acceptedFiles.forEach((file) => {\n            formData.append('resumefile', file); \n            console.log('resumefile' ,file)// Append the file object, not the path\n        });\n    \n        // Make the API request to upload the file\n        fetch('http://localhost:8080/upload-resume', {\n            method: 'POST',\n            body: formData,\n            credentials: 'include', // If you're sending cookies like candidateId\n        })\n        .then((response) => response.json())\n        .then((data) => {\n            console.log('File uploaded successfully:', data);\n        })\n        .catch((error) => {\n            console.error('Error uploading file:', error);\n        });\n    \n        // Log FormData contents\n        for (let pair of formData.entries()) {\n            console.log(pair[0], pair[1]);\n        }\n    };\n    \n\n    return (\n        <>\n            <div className=\"panel-heading wt-panel-heading p-a20 panel-heading-with-btn\">\n                <h4 className=\"panel-tittle m-a0\">Attach Resume</h4>\n            </div>\n            <div className=\"panel-body wt-panel-body p-a20\">\n                <div className=\"twm-panel-inner\">\n                    <p>Resume is the most important document recruiters look for. Recruiters generally do not look at profiles without resumes.</p>\n                    <div className=\"dashboard-cover-pic\">\n                        {/* Dropzone for file upload */}\n                        <Dropzone\n                            onDrop={onDrop}\n                            accept=\".pdf,.doc,.docx,.txt\"\n                            maxFiles={1}\n                        >\n                            {({ getRootProps, getInputProps }) => (\n                                <div {...getRootProps()} className=\"dropzone\">\n                                    <input {...getInputProps()} />\n                                    <p>Drag & drop a resume here, or click to select a file</p>\n                                </div>\n                            )}\n                        </Dropzone>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default SectionCanAttachment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}