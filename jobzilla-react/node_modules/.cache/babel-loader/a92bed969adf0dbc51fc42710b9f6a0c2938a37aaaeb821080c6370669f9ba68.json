{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\candidates\\\\section-can-education.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionCandidateEducation() {\n  _s();\n  const [educationData, setEducationData] = useState([]); // To store fetched education data\n  const [loading, setLoading] = useState(true); // To show loading state while data is fetching\n  const [error, setError] = useState(null); // To handle errors\n  const {\n    resumeId\n  } = useParams();\n  useEffect(() => {\n    const fetchEducationData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/resume/${resumeId}`); // Make API call with resumeId\n        if (!response.ok) {\n          throw new Error('Failed to fetch resume data');\n        }\n        const data = await response.json();\n        setEducationData(data.education || []); // Assuming your response contains education data in the 'education' field\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEducationData();\n  }, [resumeId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"twm-s-title\",\n      children: \"Education & Training\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"twm-timing-list-wrap\",\n      children: educationData.length > 0 ? educationData.map((edu, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twm-timing-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twm-time-list-date\",\n          children: [edu.startyear, \" to \", edu.lastyear || \"Present\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twm-time-list-title\",\n          children: edu.course\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twm-time-list-position\",\n          children: edu.university\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"twm-time-list-discription\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: edu.educationCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No education data available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionCandidateEducation, \"7JXA9PRjQkeOj/laiQIZD6xMicM=\", false, function () {\n  return [useParams];\n});\n_c = SectionCandidateEducation;\nexport default SectionCandidateEducation;\nvar _c;\n$RefreshReg$(_c, \"SectionCandidateEducation\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionCandidateEducation","_s","educationData","setEducationData","loading","setLoading","error","setError","resumeId","fetchEducationData","response","fetch","ok","Error","data","json","education","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","edu","index","startyear","lastyear","course","university","educationCategory","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/candidates/section-can-education.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction SectionCandidateEducation() {\n\n    const [educationData, setEducationData] = useState([]); // To store fetched education data\n    const [loading, setLoading] = useState(true); // To show loading state while data is fetching\n    const [error, setError] = useState(null); // To handle errors\n    const { resumeId } = useParams();\n\n    useEffect(() => {\n        const fetchEducationData = async () => {\n            try {\n                const response = await fetch(`http://localhost:8080/resume/${resumeId}`); // Make API call with resumeId\n                if (!response.ok) {\n                    throw new Error('Failed to fetch resume data');\n                }\n                const data = await response.json();\n                setEducationData(data.education || []); // Assuming your response contains education data in the 'education' field\n            } catch (err) {\n                setError(err.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchEducationData();\n    }, [resumeId]);\n\n    if (loading) {\n        return <p>Loading...</p>;\n    }\n\n    if (error) {\n        return <p>Error: {error}</p>;\n    }\n\n    return (\n        <>\n            <h4 className=\"twm-s-title\">Education &amp; Training</h4>\n            <div className=\"twm-timing-list-wrap\">\n                {educationData.length > 0 ? (\n                    educationData.map((edu, index) => (\n                        <div key={index} className=\"twm-timing-list\">\n                            <div className=\"twm-time-list-date\">\n                                {edu.startyear} to {edu.lastyear || \"Present\"}\n                            </div>\n                            <div className=\"twm-time-list-title\">{edu.course}</div>\n                            <div className=\"twm-time-list-position\">{edu.university}</div>\n                            <div className=\"twm-time-list-discription\">\n                                <p>{edu.educationCategory}</p>\n                            </div>\n                        </div>\n                    ))\n                ) : (\n                    <p>No education data available.</p>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default SectionCandidateEducation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}