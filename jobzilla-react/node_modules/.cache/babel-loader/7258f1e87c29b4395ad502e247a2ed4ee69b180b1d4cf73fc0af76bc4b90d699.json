{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\candidate\\\\sections\\\\dashboard\\\\section-can-activities.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionCandidateRecentActivities() {\n  _s();\n  const [appliedJobs, setAppliedJobs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch the last applied jobs when the component mounts\n    fetch('http://localhost:8080/user/last-applied-jobs', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setAppliedJobs(data); // Set the fetched data in the state\n      setLoading(false); // Stop loading when data is fetched\n    }).catch(error => {\n      setError('Unable to fetch applied jobs.');\n      setLoading(false); // Stop loading even if there's an error\n    });\n  }, []); // Empty dependency array to run this effect only once\n\n  // If loading, display a loading message\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this);\n  }\n\n  // If there's an error, display the error message\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this);\n  }\n  console.log;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel panel-default site-bg-white m-t30\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-heading wt-panel-heading p-a20\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"panel-tittle m-a0\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-list-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), \" Recent Activities\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-body wt-panel-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-list-box list-box-with-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: appliedJobs.length > 0 ? appliedJobs.map((apply, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-suitcase text-primary list-box-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this), \"Your job for\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"text-primary\",\n                children: apply.jobTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), \"has been applied on \", new Date(apply.appliedAt).toLocaleDateString(), \".\", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                className: \"close-list-item color-lebel clr-red\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"far fa-trash-alt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"No recent applied jobs.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n}\n_s(SectionCandidateRecentActivities, \"QC6vOVFbjpVbaATQB8LgUcxSru0=\");\n_c = SectionCandidateRecentActivities;\nexport default SectionCandidateRecentActivities;\nvar _c;\n$RefreshReg$(_c, \"SectionCandidateRecentActivities\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionCandidateRecentActivities","_s","appliedJobs","setAppliedJobs","loading","setLoading","error","setError","fetch","method","headers","then","response","json","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","className","length","map","apply","index","href","jobTitle","Date","appliedAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/candidate/sections/dashboard/section-can-activities.jsx"],"sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nfunction SectionCandidateRecentActivities() {\n    const [appliedJobs, setAppliedJobs] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n  \n    useEffect(() => {\n      // Fetch the last applied jobs when the component mounts\n      fetch('http://localhost:8080/user/last-applied-jobs', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setAppliedJobs(data);  // Set the fetched data in the state\n          setLoading(false);      // Stop loading when data is fetched\n        })\n        .catch((error) => {\n          setError('Unable to fetch applied jobs.');\n          setLoading(false);      // Stop loading even if there's an error\n        });\n    }, []); // Empty dependency array to run this effect only once\n  \n    // If loading, display a loading message\n    if (loading) {\n      return <div>Loading...</div>;\n    }\n  \n    // If there's an error, display the error message\n    if (error) {\n      return <div>{error}</div>;\n    }\n    console.log\n    return (\n        <>\n             <div className=\"panel panel-default site-bg-white m-t30\">\n      <div className=\"panel-heading wt-panel-heading p-a20\">\n        <h4 className=\"panel-tittle m-a0\">\n          <i className=\"far fa-list-alt\" /> Recent Activities\n        </h4>\n      </div>\n      <div className=\"panel-body wt-panel-body\">\n        <div className=\"dashboard-list-box list-box-with-icon\">\n          <ul>\n            {appliedJobs.length > 0 ? (\n              appliedJobs.map((apply, index) => (\n                <li key={index}>\n                  <i className=\"fa fa-suitcase text-primary list-box-icon\" />\n                  Your job for\n                  <a href=\"#\" className=\"text-primary\">\n                    {apply.jobTitle}\n                  </a>\n                  has been applied on {new Date(apply.appliedAt).toLocaleDateString()}.\n                  <a href=\"#\" className=\"close-list-item color-lebel clr-red\">\n                    <i className=\"far fa-trash-alt\" />\n                  </a>\n                </li>\n              ))\n            ) : (\n              <li>No recent applied jobs.</li>\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n        </>\n    )\n}\n\nexport default SectionCandidateRecentActivities;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}