{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\common\\\\section-office-photos1.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"; // Import useParams to get the jobId from URL\nimport JobZImage from \"../../../../common/jobz-img\";\nimport { publicUrlFor } from \"../../../../../globals/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionOfficePhotos1() {\n  _s();\n  const {\n    jobId\n  } = useParams(); // Extract jobId from the URL\n  const [job, setJob] = useState(null);\n  const [showLargeImages, setShowLargeImages] = useState(false); // State to toggle image size\n\n  useEffect(() => {\n    const fetchJobData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJob(data); // Store the fetched job data\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      }\n    };\n    if (jobId) {\n      fetchJobData(); // Fetch job data if jobId is available\n    }\n  }, [jobId]); // Re-run the effect if jobId changes\n\n  // If job is still loading or not found\n  if (!job) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Toggle image size\n  const toggleImageSize = () => {\n    setShowLargeImages(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"twm-s-title\",\n      children: \"Office Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleImageSize,\n      className: \"toggle-image-size-btn\",\n      children: showLargeImages ? 'Show Smaller Images' : 'Show Larger Images'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tw-sidebar-gallery\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: job.userId.gallery && job.userId.gallery.map((image, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tw-service-gallery-thumb\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"elem\",\n              href: `http://localhost:8080/${image}`,\n              title: `Title ${index + 1}`,\n              \"data-lcl-author\": true,\n              \"data-lcl-thumb\": `http://localhost:8080/${image}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:8080/${image}`,\n                alt: `Gallery image ${index + 1}`,\n                style: {\n                  width: showLargeImages ? '100%' : '200px',\n                  // Adjust width based on state\n                  height: showLargeImages ? 'auto' : 'auto' // Maintain aspect ratio\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-file-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(SectionOfficePhotos1, \"chxgXgvaQOKvAOojgFcnzKSPVuU=\", false, function () {\n  return [useParams];\n});\n_c = SectionOfficePhotos1;\nexport default SectionOfficePhotos1;\nvar _c;\n$RefreshReg$(_c, \"SectionOfficePhotos1\");","map":{"version":3,"names":["React","useState","useEffect","useParams","JobZImage","publicUrlFor","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionOfficePhotos1","_s","jobId","job","setJob","showLargeImages","setShowLargeImages","fetchJobData","response","fetch","ok","data","json","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","toggleImageSize","prevState","className","onClick","userId","gallery","map","image","index","href","title","src","alt","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/common/section-office-photos1.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";  // Import useParams to get the jobId from URL\nimport JobZImage from \"../../../../common/jobz-img\";\nimport { publicUrlFor } from \"../../../../../globals/constants\";\n\nfunction SectionOfficePhotos1() {\n  const { jobId } = useParams();  // Extract jobId from the URL\n  const [job, setJob] = useState(null);\n  const [showLargeImages, setShowLargeImages] = useState(false);  // State to toggle image size\n\n  useEffect(() => {\n    const fetchJobData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/post-job/${jobId}`);\n        if (response.ok) {\n          const data = await response.json();\n          setJob(data);  // Store the fetched job data\n        } else {\n          console.error(\"Failed to fetch job data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching job data\", error);\n      }\n    };\n\n    if (jobId) {\n      fetchJobData();  // Fetch job data if jobId is available\n    }\n  }, [jobId]);  // Re-run the effect if jobId changes\n\n  // If job is still loading or not found\n  if (!job) {\n    return <div>Loading...</div>;\n  }\n\n  // Toggle image size\n  const toggleImageSize = () => {\n    setShowLargeImages(prevState => !prevState);\n  };\n\n  return (\n    <>\n      <h4 className=\"twm-s-title\">Office Photos</h4>\n      <button \n        onClick={toggleImageSize} \n        className=\"toggle-image-size-btn\"\n      >\n        {showLargeImages ? 'Show Smaller Images' : 'Show Larger Images'}\n      </button>\n      \n      <div className=\"tw-sidebar-gallery\">\n        <ul>\n          {job.userId.gallery && job.userId.gallery.map((image, index) => (\n            <li key={index}>\n              <div className=\"tw-service-gallery-thumb\">\n                <a\n                  className=\"elem\"\n                  href={`http://localhost:8080/${image}`}\n                  title={`Title ${index + 1}`}\n                  data-lcl-author\n                  data-lcl-thumb={`http://localhost:8080/${image}`}\n                >\n                  <img\n                    src={`http://localhost:8080/${image}`}\n                    alt={`Gallery image ${index + 1}`}\n                    style={{\n                      width: showLargeImages ? '100%' : '200px',  // Adjust width based on state\n                      height: showLargeImages ? 'auto' : 'auto', // Maintain aspect ratio\n                    }}\n                  />\n                  <i className=\"fa fa-file-image\" />\n                </a>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default SectionOfficePhotos1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}