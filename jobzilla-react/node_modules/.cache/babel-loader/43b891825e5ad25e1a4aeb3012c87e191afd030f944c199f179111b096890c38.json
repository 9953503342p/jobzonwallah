{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\components\\\\jobs\\\\jobs-grid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SectionJobsSidebar1 from \"../../sections/jobs/sidebar/section-jobs-sidebar1\";\nimport SectionJobsGrid from \"../../sections/jobs/section-jobs-grid\";\nimport SectionRecordsFilter from \"../../sections/common/section-records-filter\";\nimport { loadScript } from \"../../../../../globals/constants\";\nimport SectionPagination from \"../../sections/common/section-pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobsGridPage() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [candidatesPerPage, setCandidatesPerPage] = useState(10);\n  const [candidates, setCandidates] = useState([]);\n  const _filterConfig = {\n    prefix: \"Showing\",\n    type: \"jobs\",\n    total: \"2,150\",\n    showRange: false,\n    showingUpto: \"\"\n  };\n\n  // Fetch jobs data when the component is mounted\n  useEffect(() => {\n    loadScript(\"js/custom.js\");\n    fetch(\"http://localhost:8080/post-job\").then(response => response.json()).then(data => setCandidates(data)).catch(error => console.error(\"Error fetching jobs:\", error));\n  }, []);\n\n  // Pagination Logic: Slice the candidates based on the current page and candidatesPerPage\n  const indexOfLastCandidate = currentPage * candidatesPerPage;\n  const indexOfFirstCandidate = indexOfLastCandidate - candidatesPerPage;\n  const currentCandidates = candidates.slice(indexOfFirstCandidate, indexOfLastCandidate);\n\n  // Handle page change\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // Handle candidates per page change\n  const handleCandidatesPerPageChange = event => {\n    setCandidatesPerPage(Number(event.target.value));\n    setCurrentPage(1); // Reset to the first page\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section-full p-t120 p-b90 site-bg-white\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 col-md-12 rightSidebar\",\n          children: /*#__PURE__*/_jsxDEV(SectionJobsSidebar1, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-8 col-md-12\",\n          children: [/*#__PURE__*/_jsxDEV(SectionRecordsFilter, {\n            _config: _filterConfig,\n            onCandidatesPerPageChange: handleCandidatesPerPageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SectionJobsGrid, {\n            jobs: currentCandidates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SectionPagination, {\n            candidatesPerPage: candidatesPerPage,\n            totalCandidates: candidates.length,\n            paginate: paginate,\n            currentPage: currentPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(JobsGridPage, \"tVsr4OAYxmXlNbS9yHM2qDjp5bc=\");\n_c = JobsGridPage;\nexport default JobsGridPage;\nvar _c;\n$RefreshReg$(_c, \"JobsGridPage\");","map":{"version":3,"names":["React","useState","useEffect","SectionJobsSidebar1","SectionJobsGrid","SectionRecordsFilter","loadScript","SectionPagination","jsxDEV","_jsxDEV","JobsGridPage","_s","currentPage","setCurrentPage","candidatesPerPage","setCandidatesPerPage","candidates","setCandidates","_filterConfig","prefix","type","total","showRange","showingUpto","fetch","then","response","json","data","catch","error","console","indexOfLastCandidate","indexOfFirstCandidate","currentCandidates","slice","paginate","pageNumber","handleCandidatesPerPageChange","event","Number","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_config","onCandidatesPerPageChange","jobs","totalCandidates","length","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/components/jobs/jobs-grid.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport SectionJobsSidebar1 from \"../../sections/jobs/sidebar/section-jobs-sidebar1\";\r\nimport SectionJobsGrid from \"../../sections/jobs/section-jobs-grid\";\r\nimport SectionRecordsFilter from \"../../sections/common/section-records-filter\";\r\nimport { loadScript } from \"../../../../../globals/constants\";\r\n\r\nimport SectionPagination from \"../../sections/common/section-pagination\";\r\n\r\nfunction JobsGridPage() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [candidatesPerPage, setCandidatesPerPage] = useState(10);\r\n  const [candidates, setCandidates] = useState([]);\r\n\r\n  const _filterConfig = {\r\n    prefix: \"Showing\",\r\n    type: \"jobs\",\r\n    total: \"2,150\",\r\n    showRange: false,\r\n    showingUpto: \"\"\r\n  };\r\n\r\n  // Fetch jobs data when the component is mounted\r\n  useEffect(() => {\r\n    loadScript(\"js/custom.js\");\r\n\r\n    fetch(\"http://localhost:8080/post-job\")\r\n      .then((response) => response.json())\r\n      .then((data) => setCandidates(data))\r\n      .catch((error) => console.error(\"Error fetching jobs:\", error));\r\n  }, []);\r\n\r\n  // Pagination Logic: Slice the candidates based on the current page and candidatesPerPage\r\n  const indexOfLastCandidate = currentPage * candidatesPerPage;\r\n  const indexOfFirstCandidate = indexOfLastCandidate - candidatesPerPage;\r\n  const currentCandidates = candidates.slice(indexOfFirstCandidate, indexOfLastCandidate);\r\n\r\n  // Handle page change\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // Handle candidates per page change\r\n  const handleCandidatesPerPageChange = (event) => {\r\n    setCandidatesPerPage(Number(event.target.value));\r\n    setCurrentPage(1); // Reset to the first page\r\n  };\r\n\r\n  return (\r\n    <div className=\"section-full p-t120 p-b90 site-bg-white\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4 col-md-12 rightSidebar\">\r\n            <SectionJobsSidebar1 />\r\n          </div>\r\n          <div className=\"col-lg-8 col-md-12\">\r\n            {/* Filter and sorting */}\r\n            <SectionRecordsFilter\r\n              _config={_filterConfig}\r\n              onCandidatesPerPageChange={handleCandidatesPerPageChange}\r\n            />\r\n            {/* Jobs Grid */}\r\n            <SectionJobsGrid jobs={currentCandidates} />\r\n            {/* Pagination */}\r\n            <SectionPagination\r\n              candidatesPerPage={candidatesPerPage}\r\n              totalCandidates={candidates.length}\r\n              paginate={paginate}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobsGridPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}