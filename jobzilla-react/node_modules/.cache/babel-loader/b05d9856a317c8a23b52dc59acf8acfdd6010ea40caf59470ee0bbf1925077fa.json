{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pradeep yadav\\\\Downloads\\\\jobzilla\\\\TF-jobzilla\\\\jobzilla-react\\\\src\\\\app\\\\pannels\\\\public-user\\\\sections\\\\jobs\\\\section-jobs-list.jsx\",\n  _s = $RefreshSig$();\nimport JobZImage from \"../../../../common/jobz-img\";\nimport { NavLink } from \"react-router-dom\";\nimport { publicUser } from \"../../../../../globals/route-names\";\nimport SectionPagination from \"../common/section-pagination\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SectionJobsList() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const fetchJobs = async () => {\n      try {\n        const response = await fetch('/candidate'); // Fetch the candidate data\n        const data = await response.json(); // Convert the response to JSON\n        setJobs(data); // Store the fetched data in state\n      } catch (err) {\n        console.error('Error fetching job data', err); // Handle any errors\n      }\n    };\n\n    fetchJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"twm-jobs-list-wrap\",\n        children: \"Jobcategory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SectionPagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(SectionJobsList, \"Q0mbvptFv5mszAZqWDb/1cpBDtw=\");\n_c = SectionJobsList;\nexport default SectionJobsList;\nvar _c;\n$RefreshReg$(_c, \"SectionJobsList\");","map":{"version":3,"names":["JobZImage","NavLink","publicUser","SectionPagination","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SectionJobsList","_s","jobs","setJobs","fetchJobs","response","fetch","data","json","err","console","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Pradeep yadav/Downloads/jobzilla/TF-jobzilla/jobzilla-react/src/app/pannels/public-user/sections/jobs/section-jobs-list.jsx"],"sourcesContent":["import JobZImage from \"../../../../common/jobz-img\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { publicUser } from \"../../../../../globals/route-names\";\r\nimport SectionPagination from \"../common/section-pagination\";\r\nimport React, { useEffect, useState } from 'react';\r\nfunction SectionJobsList() {\r\n    const [jobs, setJobs] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const fetchJobs = async () => {\r\n        try {\r\n          const response = await fetch('/candidate'); // Fetch the candidate data\r\n          const data = await response.json(); // Convert the response to JSON\r\n          setJobs(data); // Store the fetched data in state\r\n        } catch (err) {\r\n          console.error('Error fetching job data', err); // Handle any errors\r\n        }\r\n      };\r\n  \r\n      fetchJobs();\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            <div>\r\n                <div className=\"twm-jobs-list-wrap\">\r\n                Jobcategory\r\n                </div>\r\n                <SectionPagination />\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SectionJobsList;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,6BAA6B;AACnD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,SAASC,UAAU,QAAQ,oCAAoC;AAC/D,OAAOC,iBAAiB,MAAM,8BAA8B;AAC5D,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACnD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpCL,OAAO,CAACI,IAAI,CAAC,CAAC,CAAC;MACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC,CAAC;MACjD;IACF,CAAC;;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACIf,OAAA;MAAAe,QAAA,gBACIf,OAAA;QAAKgB,SAAS,EAAC,oBAAoB;QAAAD,QAAA,EAAC;MAEpC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNpB,OAAA,CAACL,iBAAiB;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC,gBAER,CAAC;AAEX;AAAChB,EAAA,CA5BQD,eAAe;AAAAkB,EAAA,GAAflB,eAAe;AA8BxB,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}